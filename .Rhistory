max(CASE WHEN m.parameter='Sr87_Sr86' then m.value END) AS 'Sr87_Sr86',
max(CASE WHEN m.parameter='Pb206_Pb204' then m.value END) AS 'Pb206_Pb204',
max(CASE WHEN m.parameter='Pb207_Pb204' then m.value END) AS 'Pb207_Pb204',
max(CASE WHEN m.parameter='Pb208_Pb204' then m.value END) AS 'Pb208_Pb204'
FROM 'samples.csv' AS s JOIN 'measurements.csv' AS m ON s.id=m.sample_id
WHERE s.sample_category = 'SOURCE'
AND m.parameter IN ('Nd143_Nd144', 'Sr87_Sr86','Pb206_Pb204', 'Pb207_Pb204',
'Pb208_Pb204') GROUP BY sample_id") %>%
dplyr::mutate(Location = case_when(
location_region == "AUSTRAL" ~ "Austral-Cook chain",
location_region == "CAROLINE" ~ "Caroline islands",
location_region == "COOK ISLANDS" ~ "Austral-Cook chain",
location_region == "GAMBIER" ~ "Pitcairn-Gambier chain",
location_region == "HAWAI'I" ~ "Hawai'i islands",
location_region == "HENDERSON" ~ "Pitcairn-Gambier chain",
location_region == "MARQUESAS" ~ "Marquesas islands",
location_region == "PITCAIRN" ~ "Pitcairn-Gambier chain",
location_region == "SAMOA" ~ "Samoan islands",
location_region == "SOCIETY" ~ "Society islands",
TRUE ~ "na")) %>%
dplyr::rename(Sample=sample_id,lat=location_latitude,long=location_longitude) %>%
dplyr::filter(Location %in% c(
"Caroline islands","Samoan islands","Austral-Cook chain","Society islands",
"Hawai'i islands","Marquesas islands","Pitcairn-Gambier chain")) %>%
dplyr::select(Sample,Location,lat,long,Sr87_Sr86,Nd143_Nd144,
Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
#### Fig S16 ####
q30 <- dbGetQuery(georoc,
"SELECT id AS Sample, file_id, LOCATION, LATITUDE_MAX AS lat, LONGITUDE_MAX AS long,
`SIO2(WT%)`AS SiO2, `TIO2(WT%)` AS TiO2, `MGO(WT%)`AS MgO,
`K2O(WT%)`AS K2O, `NA2O(WT%)`AS Na2O,
`CS(PPM)` AS Cs, `RB(PPM)` AS Rb, `BA(PPM)` AS Ba, `TH(PPM)` AS Th,
`U(PPM)` AS U, `NB(PPM)` AS Nb, `TA(PPM)` AS Ta, `LA(PPM)` AS La,
`CE(PPM)` AS Ce, `PR(PPM)` AS Pr, `ND(PPM)` AS Nd, `SR(PPM)` AS Sr,
`SM(PPM)` AS Sm, `ZR(PPM)` AS Zr, `TI(PPM)` AS Ti, `EU(PPM)` AS Eu,
`GD(PPM)` AS Gd, `TB(PPM)` AS Tb, `DY(PPM)` AS Dy, `Y(PPM)` AS Y,
`ER(PPM)` AS Er, `YB(PPM)` AS Yb, `LU(PPM)` AS Lu
FROM 'sample'
WHERE LAND_OR_SEA='SAE' AND ROCK_TYPE='VOL' AND
((
`SIO2(WT%)` > 45.2 AND `SIO2(WT%)` < 48.2 AND
`NA2O(WT%)` > 2.08 AND `NA2O(WT%)` < 5.08 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.9 AND
`MGO(WT%)` > 3.08 AND `MGO(WT%)` < 6.08
) OR (
`SIO2(WT%)` > 44.3 AND `SIO2(WT%)` < 47.3 AND
`NA2O(WT%)` > 2 AND `NA2O(WT%)` < 5 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.82 AND
`MGO(WT%)` > 3.52 AND `MGO(WT%)` < 6.52
) OR (
`SIO2(WT%)` > 43.5 AND `SIO2(WT%)` < 46.5 AND
`NA2O(WT%)` > 1.9 AND `NA2O(WT%)` < 4.9 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.78 AND
`MGO(WT%)` > 3.79 AND `MGO(WT%)` < 6.79
) OR (
`SIO2(WT%)` > 45.9 AND `SIO2(WT%)` < 48.9 AND
`NA2O(WT%)` > 2.18 AND `NA2O(WT%)` < 5.18 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.99 AND
`MGO(WT%)` > 3.44 AND `MGO(WT%)` < 6.44
) OR (
`SIO2(WT%)` > 44.1 AND `SIO2(WT%)` < 47.1 AND
`NA2O(WT%)` > 1.8 AND `NA2O(WT%)` < 4.8 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.72 AND
`MGO(WT%)` > 4.15 AND `MGO(WT%)` < 7.15
) OR (
`SIO2(WT%)` > 45.7 AND `SIO2(WT%)` < 48.7 AND
`NA2O(WT%)` > 2.08 AND `NA2O(WT%)` < 5.08 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.85 AND
`MGO(WT%)` > 3.10 AND `MGO(WT%)` < 6.10
))") %>%
dplyr::filter(grepl("SAMOAN", file_id)) %>%
get_georoc_location() %>% filter(Location != "na") %>%
Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::mutate(Location = case_when(
grepl("MANUA ISLANDS", LOCATION) ~ "Manua Islands",
grepl("SAVAI", LOCATION) ~ "Savai'i",
grepl("TUTUILA", LOCATION) ~ "Tutuila",
grepl("UPOLU", LOCATION) ~ "Upolu"))
q31 <- dbGetQuery(pofatu,
"SELECT * FROM (
SELECT s.id AS Sample, s.sample_category, s.location_region,
s.location_subregion, s.site_name, s.sample_comment,
s.location_latitude AS lat, s.location_longitude AS long,
max(CASE WHEN m.parameter='SiO2 [%]' then m.value END) AS 'SiO2',
max(CASE WHEN m.parameter='TiO2 [%]' then m.value END) AS 'TiO2',
max(CASE WHEN m.parameter='Al2O3 [%]' then m.value END) AS 'Al2O3',
max(CASE WHEN m.parameter='Fe2O3 [%]' then m.value END) AS 'Fe2O3',
max(CASE WHEN m.parameter='FeO [%]' then m.value END) AS 'FeO',
max(CASE WHEN m.parameter='MnO [%]' then m.value END) AS 'MnO',
max(CASE WHEN m.parameter='MgO [%]' then m.value END) AS 'MgO',
max(CASE WHEN m.parameter='CaO [%]' then m.value END) AS 'CaO',
max(CASE WHEN m.parameter='Na2O [%]' then m.value END) AS 'Na2O',
max(CASE WHEN m.parameter='K2O [%]' then m.value END) AS 'K2O',
max(CASE WHEN m.parameter='Li [ppm]' then m.value END) AS 'Li',
max(CASE WHEN m.parameter='Sc [ppm]' then m.value END) AS 'Sc',
max(CASE WHEN m.parameter='Ti [ppm]' then m.value END) AS 'Ti',
max(CASE WHEN m.parameter='V [ppm]' then m.value END) AS 'V',
max(CASE WHEN m.parameter='Cr [ppm]' then m.value END) AS 'Cr',
max(CASE WHEN m.parameter='Co [ppm]' then m.value END) AS 'Co',
max(CASE WHEN m.parameter='Ni [ppm]' then m.value END) AS 'Ni',
max(CASE WHEN m.parameter='Cu [ppm]' then m.value END) AS 'Cu',
max(CASE WHEN m.parameter='Zn [ppm]' then m.value END) AS 'Zn',
max(CASE WHEN m.parameter='As [ppm]' then m.value END) AS 'As',
max(CASE WHEN m.parameter='Rb [ppm]' then m.value END) AS 'Rb',
max(CASE WHEN m.parameter='Sr [ppm]' then m.value END) AS 'Sr',
max(CASE WHEN m.parameter='Y [ppm]' then m.value END) AS 'Y',
max(CASE WHEN m.parameter='Zr [ppm]' then m.value END) AS 'Zr',
max(CASE WHEN m.parameter='Nb [ppm]' then m.value END) AS 'Nb',
max(CASE WHEN m.parameter='Cd [ppm]' then m.value END) AS 'Cd',
max(CASE WHEN m.parameter='Cs [ppm]' then m.value END) AS 'Cs',
max(CASE WHEN m.parameter='Ba [ppm]' then m.value END) AS 'Ba',
max(CASE WHEN m.parameter='La [ppm]' then m.value END) AS 'La',
max(CASE WHEN m.parameter='Ce [ppm]' then m.value END) AS 'Ce',
max(CASE WHEN m.parameter='Pr [ppm]' then m.value END) AS 'Pr',
max(CASE WHEN m.parameter='Nd [ppm]' then m.value END) AS 'Nd',
max(CASE WHEN m.parameter='Sm [ppm]' then m.value END) AS 'Sm',
max(CASE WHEN m.parameter='Eu [ppm]' then m.value END) AS 'Eu',
max(CASE WHEN m.parameter='Gd [ppm]' then m.value END) AS 'Gd',
max(CASE WHEN m.parameter='Tb [ppm]' then m.value END) AS 'Tb',
max(CASE WHEN m.parameter='Dy [ppm]' then m.value END) AS 'Dy',
max(CASE WHEN m.parameter='Ho [ppm]' then m.value END) AS 'Ho',
max(CASE WHEN m.parameter='Er [ppm]' then m.value END) AS 'Er',
max(CASE WHEN m.parameter='Tm [ppm]' then m.value END) AS 'Tm',
max(CASE WHEN m.parameter='Yb [ppm]' then m.value END) AS 'Yb',
max(CASE WHEN m.parameter='Lu [ppm]' then m.value END) AS 'Lu',
max(CASE WHEN m.parameter='Hf [ppm]' then m.value END) AS 'Hf',
max(CASE WHEN m.parameter='Ta [ppm]' then m.value END) AS 'Ta',
max(CASE WHEN m.parameter='Tl [ppm]' then m.value END) AS 'Tl',
max(CASE WHEN m.parameter='Pb [ppm]' then m.value END) AS 'Pb',
max(CASE WHEN m.parameter='Th [ppm]' then m.value END) AS 'Th',
max(CASE WHEN m.parameter='U [ppm]' then m.value END) AS 'U',
max(CASE WHEN m.parameter='Nd143_Nd144' then m.value END) AS 'Nd143_Nd144',
max(CASE WHEN m.parameter='Sr87_Sr86' then m.value END) AS 'Sr87_Sr86',
max(CASE WHEN m.parameter='Pb206_Pb204' then m.value END) AS 'Pb206_Pb204',
max(CASE WHEN m.parameter='Pb207_Pb204' then m.value END) AS 'Pb207_Pb204',
max(CASE WHEN m.parameter='Pb208_Pb204' then m.value END) AS 'Pb208_Pb204'
FROM 'samples.csv' AS s JOIN 'measurements.csv' AS m ON s.id=m.sample_id
WHERE location_region = 'SAMOA' AND
m.parameter IN ('SiO2 [%]', 'TiO2 [%]', 'Al2O3 [%]', 'Fe2O3 [%]', 'FeO [%]',
'MnO [%]', 'MgO [%]', 'CaO [%]', 'Na2O [%]', 'K2O [%]',
'Li [ppm]', 'Sc [ppm]', 'Ti [ppm]', 'V [ppm]', 'Cr [ppm]',
'Co [ppm]', 'Ni [ppm]', 'Cu [ppm]', 'Zn [ppm]', 'As [ppm]',
'Rb [ppm]', 'Sr [ppm]', 'Y [ppm]', 'Zr [ppm]', 'Nb [ppm]',
'Cd [ppm]', 'Cs [ppm]', 'Ba [ppm]', 'La [ppm]', 'Ce [ppm]',
'Pr [ppm]', 'Nd [ppm]', 'Sm [ppm]', 'Eu [ppm]', 'Gd [ppm]',
'Tb [ppm]', 'Dy [ppm]', 'Ho [ppm]', 'Er [ppm]', 'Tm [ppm]',
'Yb [ppm]', 'Lu [ppm]', 'Hf [ppm]', 'Ta [ppm]', 'Tl [ppm]',
'Pb [ppm]', 'Th [ppm]', 'U [ppm]', 'Nd143_Nd144',
'Sr87_Sr86', 'Pb206_Pb204', 'Pb207_Pb204', 'Pb208_Pb204')
GROUP BY sample_id) AS Q31 WHERE
(
(
SiO2 > 45.2 AND SiO2 < 48.2 AND
Na2O > 2.08 AND Na2O < 5.08 AND
K2O > 0 AND K2O < 2.9 AND
MgO > 3.08 AND MgO < 6.08
) OR (
SiO2 > 44.3 AND SiO2 < 47.3 AND
Na2O > 2 AND Na2O < 5 AND
K2O > 0 AND K2O < 2.82 AND
MgO > 3.52 AND MgO < 6.52
) OR (
SiO2 > 43.5 AND SiO2 < 46.5 AND
Na2O > 1.9 AND Na2O < 4.9 AND
K2O > 0 AND K2O < 2.78 AND
MgO > 3.79 AND MgO < 6.79
) OR (
SiO2 > 45.9 AND SiO2 < 48.9 AND
Na2O > 2.18 AND Na2O < 5.18 AND
K2O > 0 AND K2O < 2.99 AND
MgO > 3.44 AND MgO < 6.44
) OR (
SiO2 > 44.1 AND SiO2 < 47.1 AND
Na2O > 1.8 AND Na2O < 4.8 AND
K2O > 0 AND K2O < 2.72 AND
MgO > 4.15 AND MgO < 7.15
) OR (
SiO2 > 45.7 AND SiO2 < 48.7 AND
Na2O > 2.08 AND Na2O < 5.08 AND
K2O > 0 AND K2O < 2.85 AND
MgO > 3.10 AND MgO < 6.10
))") %>%
Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::mutate(Location = case_when(
location_subregion=="TUTUILA" ~ "Tutuila",
location_subregion=="SAVAI'I" ~ "Savai'i",
location_subregion=="OFU" ~ "Manua Islands"))
q32 <- dbGetQuery(georoc,
"SELECT id AS Sample, file_id, LOCATION, LATITUDE_MAX AS lat, LONGITUDE_MAX AS long,
`SIO2(WT%)`AS SiO2, `TIO2(WT%)` AS TiO2, `MGO(WT%)`AS MgO,
`K2O(WT%)`AS K2O, `NA2O(WT%)`AS Na2O,
`CS(PPM)` AS Cs, `RB(PPM)` AS Rb, `BA(PPM)` AS Ba, `TH(PPM)` AS Th,
`U(PPM)` AS U, `NB(PPM)` AS Nb, `TA(PPM)` AS Ta, `LA(PPM)` AS La,
`CE(PPM)` AS Ce, `PR(PPM)` AS Pr, `ND(PPM)` AS Nd, `SR(PPM)` AS Sr,
`SM(PPM)` AS Sm, `ZR(PPM)` AS Zr, `TI(PPM)` AS Ti, `EU(PPM)` AS Eu,
`GD(PPM)` AS Gd, `TB(PPM)` AS Tb, `DY(PPM)` AS Dy, `Y(PPM)` AS Y,
`ER(PPM)` AS Er, `YB(PPM)` AS Yb, `LU(PPM)` AS Lu
FROM 'sample'
WHERE LAND_OR_SEA='SAE' AND ROCK_TYPE='VOL' AND
`NA2O(WT%)` > 1.61 AND `NA2O(WT%)` < 4.61 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.91 AND
file_id = '2022-06-WFJZKY_CAROLINE_ISLANDS.csv'
") %>%
Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::mutate(Location = case_when(
grepl("PONAPE", LOCATION) ~ "Ponape",
grepl("KUSAIE", LOCATION) ~ "Kosrae",
grepl("KOSRAE", LOCATION) ~ "Kosrae",
grepl("CHUUK", LOCATION) ~ "Chuuk")) %>% dplyr::filter(Location != "NA")
q33 <- dbGetQuery(georoc,
"SELECT id AS Sample, file_id, LOCATION, LATITUDE_MAX AS lat, LONGITUDE_MAX AS long,
`SIO2(WT%)`AS SiO2, `TIO2(WT%)` AS TiO2, `MGO(WT%)`AS MgO,
`K2O(WT%)`AS K2O, `NA2O(WT%)`AS Na2O,
`CS(PPM)` AS Cs, `RB(PPM)` AS Rb, `BA(PPM)` AS Ba, `TH(PPM)` AS Th,
`U(PPM)` AS U, `NB(PPM)` AS Nb, `TA(PPM)` AS Ta, `LA(PPM)` AS La,
`CE(PPM)` AS Ce, `PR(PPM)` AS Pr, `ND(PPM)` AS Nd, `SR(PPM)` AS Sr,
`SM(PPM)` AS Sm, `ZR(PPM)` AS Zr, `TI(PPM)` AS Ti, `EU(PPM)` AS Eu,
`GD(PPM)` AS Gd, `TB(PPM)` AS Tb, `DY(PPM)` AS Dy, `Y(PPM)` AS Y,
`ER(PPM)` AS Er, `YB(PPM)` AS Yb, `LU(PPM)` AS Lu
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
`SIO2(WT%)` > 43.1 AND `SIO2(WT%)` < 46.1 AND
`NA2O(WT%)` > 0.89 AND `NA2O(WT%)` < 3.89 AND
file_id = '2022-06-WFJZKY_CAROLINE_ISLANDS.csv'
") %>%
Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::mutate(Location = case_when(
grepl("PONAPE", LOCATION) ~ "Ponape",
grepl("KUSAIE", LOCATION) ~ "Kosrae",
grepl("KOSRAE", LOCATION) ~ "Kosrae",
grepl("CHUUK", LOCATION) ~ "Chuuk")) %>% dplyr::filter(Location != "NA")
q34 <- dbGetQuery(georoc,
"SELECT id AS Sample, file_id, LOCATION, LATITUDE_MAX AS lat, LONGITUDE_MAX AS long,
`SIO2(WT%)`AS SiO2, `TIO2(WT%)` AS TiO2, `MGO(WT%)`AS MgO,
`K2O(WT%)`AS K2O, `NA2O(WT%)`AS Na2O,
`CS(PPM)` AS Cs, `RB(PPM)` AS Rb, `BA(PPM)` AS Ba, `TH(PPM)` AS Th,
`U(PPM)` AS U, `NB(PPM)` AS Nb, `TA(PPM)` AS Ta, `LA(PPM)` AS La,
`CE(PPM)` AS Ce, `PR(PPM)` AS Pr, `ND(PPM)` AS Nd, `SR(PPM)` AS Sr,
`SM(PPM)` AS Sm, `ZR(PPM)` AS Zr, `TI(PPM)` AS Ti, `EU(PPM)` AS Eu,
`GD(PPM)` AS Gd, `TB(PPM)` AS Tb, `DY(PPM)` AS Dy, `Y(PPM)` AS Y,
`ER(PPM)` AS Er, `YB(PPM)` AS Yb, `LU(PPM)` AS Lu
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
`SIO2(WT%)` > 42.9 AND `SIO2(WT%)` < 45.9 AND
`NA2O(WT%)` > 2.41 AND `NA2O(WT%)` < 5.41 AND
file_id = '2022-06-WFJZKY_CAROLINE_ISLANDS.csv'
") %>%
Ti_from_TiO2() %>% K_from_K2O()  %>%
dplyr::mutate(Location = case_when(
grepl("PONAPE", LOCATION) ~ "Ponape",
grepl("KUSAIE", LOCATION) ~ "Kosrae",
grepl("KOSRAE", LOCATION) ~ "Kosrae",
grepl("CHUUK", LOCATION) ~ "Chuuk")) %>% dplyr::filter(Location != "NA")
#### Fig S17 ####
q35 <- dbGetQuery(pofatu,
"SELECT id AS Sample, sample_category,
location_subregion, site_name, sample_comment,
location_latitude AS lat, location_longitude AS long
FROM 'samples.csv'
WHERE location_subregion = 'TUTUILA'")
#### Fig S18 ####
q36 <- dbGetQuery(pofatu,
"SELECT s.id AS Sample, s.sample_category,
s.location_subregion, s.site_name, s.site_comment, s.sample_comment,
s.location_latitude AS lat, s.location_longitude AS long,
max(CASE WHEN m.parameter='SiO2 [%]' then m.value END) AS 'SiO2',
max(CASE WHEN m.parameter='TiO2 [%]' then m.value END) AS 'TiO2',
max(CASE WHEN m.parameter='Al2O3 [%]' then m.value END) AS 'Al2O3',
max(CASE WHEN m.parameter='Fe2O3 [%]' then m.value END) AS 'Fe2O3',
max(CASE WHEN m.parameter='FeO [%]' then m.value END) AS 'FeO',
max(CASE WHEN m.parameter='MnO [%]' then m.value END) AS 'MnO',
max(CASE WHEN m.parameter='MgO [%]' then m.value END) AS 'MgO',
max(CASE WHEN m.parameter='CaO [%]' then m.value END) AS 'CaO',
max(CASE WHEN m.parameter='Na2O [%]' then m.value END) AS 'Na2O',
max(CASE WHEN m.parameter='K2O [%]' then m.value END) AS 'K2O',
max(CASE WHEN m.parameter='Li [ppm]' then m.value END) AS 'Li',
max(CASE WHEN m.parameter='Sc [ppm]' then m.value END) AS 'Sc',
max(CASE WHEN m.parameter='Ti [ppm]' then m.value END) AS 'Ti',
max(CASE WHEN m.parameter='V [ppm]' then m.value END) AS 'V',
max(CASE WHEN m.parameter='Cr [ppm]' then m.value END) AS 'Cr',
max(CASE WHEN m.parameter='Co [ppm]' then m.value END) AS 'Co',
max(CASE WHEN m.parameter='Ni [ppm]' then m.value END) AS 'Ni',
max(CASE WHEN m.parameter='Cu [ppm]' then m.value END) AS 'Cu',
max(CASE WHEN m.parameter='Zn [ppm]' then m.value END) AS 'Zn',
max(CASE WHEN m.parameter='As [ppm]' then m.value END) AS 'As',
max(CASE WHEN m.parameter='Rb [ppm]' then m.value END) AS 'Rb',
max(CASE WHEN m.parameter='Sr [ppm]' then m.value END) AS 'Sr',
max(CASE WHEN m.parameter='Y [ppm]' then m.value END) AS 'Y',
max(CASE WHEN m.parameter='Zr [ppm]' then m.value END) AS 'Zr',
max(CASE WHEN m.parameter='Nb [ppm]' then m.value END) AS 'Nb',
max(CASE WHEN m.parameter='Cd [ppm]' then m.value END) AS 'Cd',
max(CASE WHEN m.parameter='Cs [ppm]' then m.value END) AS 'Cs',
max(CASE WHEN m.parameter='Ba [ppm]' then m.value END) AS 'Ba',
max(CASE WHEN m.parameter='La [ppm]' then m.value END) AS 'La',
max(CASE WHEN m.parameter='Ce [ppm]' then m.value END) AS 'Ce',
max(CASE WHEN m.parameter='Pr [ppm]' then m.value END) AS 'Pr',
max(CASE WHEN m.parameter='Nd [ppm]' then m.value END) AS 'Nd',
max(CASE WHEN m.parameter='Sm [ppm]' then m.value END) AS 'Sm',
max(CASE WHEN m.parameter='Eu [ppm]' then m.value END) AS 'Eu',
max(CASE WHEN m.parameter='Gd [ppm]' then m.value END) AS 'Gd',
max(CASE WHEN m.parameter='Tb [ppm]' then m.value END) AS 'Tb',
max(CASE WHEN m.parameter='Dy [ppm]' then m.value END) AS 'Dy',
max(CASE WHEN m.parameter='Ho [ppm]' then m.value END) AS 'Ho',
max(CASE WHEN m.parameter='Er [ppm]' then m.value END) AS 'Er',
max(CASE WHEN m.parameter='Tm [ppm]' then m.value END) AS 'Tm',
max(CASE WHEN m.parameter='Yb [ppm]' then m.value END) AS 'Yb',
max(CASE WHEN m.parameter='Lu [ppm]' then m.value END) AS 'Lu',
max(CASE WHEN m.parameter='Hf [ppm]' then m.value END) AS 'Hf',
max(CASE WHEN m.parameter='Ta [ppm]' then m.value END) AS 'Ta',
max(CASE WHEN m.parameter='Tl [ppm]' then m.value END) AS 'Tl',
max(CASE WHEN m.parameter='Pb [ppm]' then m.value END) AS 'Pb',
max(CASE WHEN m.parameter='Th [ppm]' then m.value END) AS 'Th',
max(CASE WHEN m.parameter='U [ppm]' then m.value END) AS 'U',
max(CASE WHEN m.parameter='Nd143_Nd144' then m.value END) AS 'Nd143_Nd144',
max(CASE WHEN m.parameter='Sr87_Sr86' then m.value END) AS 'Sr87_Sr86',
max(CASE WHEN m.parameter='Pb206_Pb204' then m.value END) AS 'Pb206_Pb204',
max(CASE WHEN m.parameter='Pb207_Pb204' then m.value END) AS 'Pb207_Pb204',
max(CASE WHEN m.parameter='Pb208_Pb204' then m.value END) AS 'Pb208_Pb204'
FROM 'samples.csv' AS s JOIN 'measurements.csv' AS m ON s.id=m.sample_id
WHERE location_subregion = 'TUTUILA' AND
m.parameter IN ('SiO2 [%]', 'TiO2 [%]', 'Al2O3 [%]', 'Fe2O3 [%]', 'FeO [%]',
'MnO [%]', 'MgO [%]', 'CaO [%]', 'Na2O [%]', 'K2O [%]',
'Li [ppm]', 'Sc [ppm]', 'Ti [ppm]', 'V [ppm]',
'Cr [ppm]', 'Co [ppm]', 'Ni [ppm]', 'Cu [ppm]', 'Zn [ppm]', 'As [ppm]',
'Rb [ppm]', 'Sr [ppm]', 'Y [ppm]', 'Zr [ppm]', 'Nb [ppm]', 'Cd [ppm]',
'Cs [ppm]', 'Ba [ppm]', 'La [ppm]', 'Ce [ppm]', 'Pr [ppm]', 'Nd [ppm]',
'Sm [ppm]', 'Eu [ppm]', 'Gd [ppm]', 'Tb [ppm]', 'Dy [ppm]', 'Ho [ppm]',
'Er [ppm]', 'Tm [ppm]', 'Yb [ppm]', 'Lu [ppm]', 'Hf [ppm]', 'Ta [ppm]',
'Tl [ppm]', 'Pb [ppm]', 'Th [ppm]', 'U [ppm]', 'Nd143_Nd144', 'Sr87_Sr86',
'Pb206_Pb204', 'Pb207_Pb204', 'Pb208_Pb204') GROUP BY sample_id") %>%
Ti_from_TiO2() %>% K_from_K2O() %>% Fe2O3_from_FeO()
#### Fig S19 ####
q37 <- dbGetQuery(pofatu,
"SELECT * FROM (
SELECT
s.id AS Sample, s.sample_category,
s.location_subregion, s.site_name, s.sample_comment,
s.location_latitude AS lat, s.location_longitude AS long,
max(CASE WHEN m.parameter='SiO2 [%]' then m.value END) AS 'SiO2',
max(CASE WHEN m.parameter='TiO2 [%]' then m.value END) AS 'TiO2',
max(CASE WHEN m.parameter='Al2O3 [%]' then m.value END) AS 'Al2O3',
max(CASE WHEN m.parameter='Fe2O3 [%]' then m.value END) AS 'Fe2O3',
max(CASE WHEN m.parameter='FeO [%]' then m.value END) AS 'FeO',
max(CASE WHEN m.parameter='MnO [%]' then m.value END) AS 'MnO',
max(CASE WHEN m.parameter='MgO [%]' then m.value END) AS 'MgO',
max(CASE WHEN m.parameter='CaO [%]' then m.value END) AS 'CaO',
max(CASE WHEN m.parameter='Na2O [%]' then m.value END) AS 'Na2O',
max(CASE WHEN m.parameter='K2O [%]' then m.value END) AS 'K2O',
max(CASE WHEN m.parameter='Li [ppm]' then m.value END) AS 'Li',
max(CASE WHEN m.parameter='Sc [ppm]' then m.value END) AS 'Sc',
max(CASE WHEN m.parameter='Ti [ppm]' then m.value END) AS 'Ti',
max(CASE WHEN m.parameter='V [ppm]' then m.value END) AS 'V',
max(CASE WHEN m.parameter='Cr [ppm]' then m.value END) AS 'Cr',
max(CASE WHEN m.parameter='Co [ppm]' then m.value END) AS 'Co',
max(CASE WHEN m.parameter='Ni [ppm]' then m.value END) AS 'Ni',
max(CASE WHEN m.parameter='Cu [ppm]' then m.value END) AS 'Cu',
max(CASE WHEN m.parameter='Zn [ppm]' then m.value END) AS 'Zn',
max(CASE WHEN m.parameter='As [ppm]' then m.value END) AS 'As',
max(CASE WHEN m.parameter='Rb [ppm]' then m.value END) AS 'Rb',
max(CASE WHEN m.parameter='Sr [ppm]' then m.value END) AS 'Sr',
max(CASE WHEN m.parameter='Y [ppm]' then m.value END) AS 'Y',
max(CASE WHEN m.parameter='Zr [ppm]' then m.value END) AS 'Zr',
max(CASE WHEN m.parameter='Nb [ppm]' then m.value END) AS 'Nb',
max(CASE WHEN m.parameter='Cd [ppm]' then m.value END) AS 'Cd',
max(CASE WHEN m.parameter='Cs [ppm]' then m.value END) AS 'Cs',
max(CASE WHEN m.parameter='Ba [ppm]' then m.value END) AS 'Ba',
max(CASE WHEN m.parameter='La [ppm]' then m.value END) AS 'La',
max(CASE WHEN m.parameter='Ce [ppm]' then m.value END) AS 'Ce',
max(CASE WHEN m.parameter='Pr [ppm]' then m.value END) AS 'Pr',
max(CASE WHEN m.parameter='Nd [ppm]' then m.value END) AS 'Nd',
max(CASE WHEN m.parameter='Sm [ppm]' then m.value END) AS 'Sm',
max(CASE WHEN m.parameter='Eu [ppm]' then m.value END) AS 'Eu',
max(CASE WHEN m.parameter='Gd [ppm]' then m.value END) AS 'Gd',
max(CASE WHEN m.parameter='Tb [ppm]' then m.value END) AS 'Tb',
max(CASE WHEN m.parameter='Dy [ppm]' then m.value END) AS 'Dy',
max(CASE WHEN m.parameter='Ho [ppm]' then m.value END) AS 'Ho',
max(CASE WHEN m.parameter='Er [ppm]' then m.value END) AS 'Er',
max(CASE WHEN m.parameter='Tm [ppm]' then m.value END) AS 'Tm',
max(CASE WHEN m.parameter='Yb [ppm]' then m.value END) AS 'Yb',
max(CASE WHEN m.parameter='Lu [ppm]' then m.value END) AS 'Lu',
max(CASE WHEN m.parameter='Hf [ppm]' then m.value END) AS 'Hf',
max(CASE WHEN m.parameter='Ta [ppm]' then m.value END) AS 'Ta',
max(CASE WHEN m.parameter='Tl [ppm]' then m.value END) AS 'Tl',
max(CASE WHEN m.parameter='Pb [ppm]' then m.value END) AS 'Pb',
max(CASE WHEN m.parameter='Th [ppm]' then m.value END) AS 'Th',
max(CASE WHEN m.parameter='U [ppm]' then m.value END) AS 'U',
max(CASE WHEN m.parameter='Nd143_Nd144' then m.value END) AS 'Nd143_Nd144',
max(CASE WHEN m.parameter='Sr87_Sr86' then m.value END) AS 'Sr87_Sr86',
max(CASE WHEN m.parameter='Pb206_Pb204' then m.value END) AS 'Pb206_Pb204',
max(CASE WHEN m.parameter='Pb207_Pb204' then m.value END) AS 'Pb207_Pb204',
max(CASE WHEN m.parameter='Pb208_Pb204' then m.value END) AS 'Pb208_Pb204'
FROM 'samples.csv' AS s JOIN 'measurements.csv' AS m ON s.id=m.sample_id
WHERE m.parameter IN ('SiO2 [%]', 'TiO2 [%]', 'Al2O3 [%]', 'Fe2O3 [%]', 'FeO [%]',
'MnO [%]', 'MgO [%]', 'CaO [%]', 'Na2O [%]', 'K2O [%]',
'Li [ppm]', 'Sc [ppm]', 'Ti [ppm]', 'V [ppm]',
'Cr [ppm]', 'Co [ppm]', 'Ni [ppm]', 'Cu [ppm]', 'Zn [ppm]', 'As [ppm]',
'Rb [ppm]', 'Sr [ppm]', 'Y [ppm]', 'Zr [ppm]', 'Nb [ppm]', 'Cd [ppm]',
'Cs [ppm]', 'Ba [ppm]', 'La [ppm]', 'Ce [ppm]', 'Pr [ppm]', 'Nd [ppm]',
'Sm [ppm]', 'Eu [ppm]', 'Gd [ppm]', 'Tb [ppm]', 'Dy [ppm]', 'Ho [ppm]',
'Er [ppm]', 'Tm [ppm]', 'Yb [ppm]', 'Lu [ppm]', 'Hf [ppm]', 'Ta [ppm]',
'Tl [ppm]', 'Pb [ppm]', 'Th [ppm]', 'U [ppm]', 'Nd143_Nd144', 'Sr87_Sr86',
'Pb206_Pb204', 'Pb207_Pb204', 'Pb208_Pb204')
GROUP BY sample_id) WHERE
(Sample = 'best1992_TAU48' OR Sample = 'best1992_TAU49' OR
Sample = 'best1992_TAU52' OR Sample = 'best1992_TAU54' OR
Sample = 'best1992_TOK-A2' OR Sample = 'best1992_COOK-1' OR
Sample = 'best1992_BB-8-4-4(A)' OR Sample = 'best1992_TOK-A2' OR
Sample = 'allen1997_5' OR Sample = 'allen1997_6' OR
Sample = 'weisler2016a_2009-369' OR Sample = 'clark2014_36' OR
Sample = 'clark2014_51' OR Sample = 'clark2014_53' OR
Sample = 'clark2014_54' OR Sample = 'clark2014_241' OR
Sample = 'clark2014_678' OR Sample = 'clark2014_683' OR
Sample = 'clark2014_707')") %>%
Ti_from_TiO2() %>% K_from_K2O() %>% Fe2O3_from_FeO()
#save
pdf(here("analysis","figures","Figure_2.pdf"), width=10, height=16)
A / B
dev.off()
library(here)
library(tidyverse)
library(stats)
library(gridExtra)
library(patchwork)
#### Fig 2 A ####
shapes <- c("E-11-03"=0,"E-11-06"=1,"E-11-07"=8,"E-11-08"=5,"E-11-08dup"=9,
"E-11-10"=0,"E-11-11"=1,"E-11-13"=2,"E-11-16"=5,"E-11-18"=6,
"E-11-19"=8,"T-12-06"=2,"T-12-06dup"=14,"T-12-07"=7,
"T-12-08"=6,"T-12-09"=10,"T-12-10"=11,"K-12-24"=12,"K-12-25"=13,
"K-12-26"=14,"K-12-28"=3,"K-12-29"=4)
cols <- c("E-11-03"="red","E-11-06"="red","E-11-07"="red","E-11-08"="red",
"E-11-08dup"="red","E-11-10"="#7AD04F","E-11-11"="#7AD04F",
"E-11-13"="#7AD04F","E-11-16"="#7AD04F","E-11-18"="#7AD04F",
"E-11-19"="#7AD04F","T-12-06"="red","T-12-06dup"="red",
"T-12-07"="red","T-12-08"="red","T-12-09"="red",
"T-12-10"="red","K-12-24"="red","K-12-25"="red","K-12-26"="red",
"K-12-28"="red","K-12-29"="red")
A <- traces %>% dplyr::filter(Type %in% c("Artefact", "Source")) %>%
ggplot() + geom_point(
aes(x=Nb/La, y=Sample, shape=factor(Sample), color=factor(Sample)), size=4) +
scale_shape_manual(values=shapes) +
scale_color_manual(values=cols) +
theme_bw(base_size=12, base_rect_size=1) +
scale_x_continuous(limits=c(0,2), breaks = c(0,.86,1,2)) +
theme(line=element_blank(), axis.ticks=element_line(),
legend.title = element_blank(),legend.text = element_text(size=9),
axis.text.x = element_blank(), axis.title.x = element_blank(), axis.ticks.x = element_blank(),
legend.direction="horizontal",legend.position="none") + #aspect.ratio=1
annotate("segment", x=.86, xend=.86, y=0, yend=23, size = 0.5, linetype = "dashed") +
annotate("text", Inf, Inf, label = "A", size = 7, hjust = 2, vjust = 2)
A
#### Fig 2 B ####
IAB <- q0_1
is.na(IAB) <- sapply(IAB, is.infinite) # replaces Inf or -Inf by NA
IAB[IAB==0] <- NA # replaces 0 by NA
IAB <- IAB[complete.cases(IAB),] # removes rows with NA
IAB <- IAB %>% dplyr::filter(Nb_La < 3)
summary(IAB$Nb_La)
sd <- (sqrt(sum((IAB$Nb_La - mean(IAB$Nb_La)) ^ 2 / (length(IAB$Nb_La) - 1))))
stat_IAB <- data.frame(
name = c("mean", "sd min", "sd max", "median"),
value = c(mean(IAB$Nb_La),
mean(IAB$Nb_La)-sd,
mean(IAB$Nb_La)+sd(IAB$Nb_La),
median(IAB$Nb_La))) %>% dplyr::mutate(across(where(is.numeric), round, 3))
OIB <- q0_2
is.na(OIB) <- sapply(OIB, is.infinite) # replaces Inf or -Inf by NA
OIB[OIB==0] <- NA # replaces 0 by NA
OIB <- OIB[complete.cases(OIB),] # removes rows with NA
OIB <- OIB %>% dplyr::filter(Nb_La < 3)
summary(OIB$Nb_La)
sd <- (sqrt(sum((OIB$Nb_La - mean(OIB$Nb_La)) ^ 2 / (length(OIB$Nb_La) - 1))))
stat_OIB <- data.frame(
name = c("mean", "sd min", "sd max", "median"),
value = c(mean(OIB$Nb_La),
mean(OIB$Nb_La)-sd,
mean(OIB$Nb_La)+sd,
median(OIB$Nb_La))) %>%
dplyr::mutate(across(where(is.numeric), round, 3))
B <- ggplot(OIB, aes(Nb_La)) +
geom_histogram(binwidth=.02, col="black", fill="red", size=.2, alpha=.4) + #OIB
annotate("rect",xmin=stat_OIB[2,2],xmax=stat_OIB[3,2],
ymin=-Inf,ymax=Inf,fill="red",alpha=.1) + #OIB
geom_histogram(data=IAB, binwidth=.02, col="black", fill="blue", size=.2, alpha=.4) + #IAB
annotate("rect",xmin=stat_IAB[2,2],xmax=stat_IAB[3,2],
ymin=-Inf,ymax=Inf,fill="blue",alpha=.1) + #IAB
annotate("point", x=stat_OIB[1,2], y=0, shape=21, col="red", fill="red", size=3) + #mean OIB
annotate("text",x=stat_OIB[1,2], y=-50, label = "bar(x)", col="red", parse=T) + #mean OIB
annotate("point", x=stat_OIB[4,2], y=0, shape=21, col="red", fill="white", stroke=1, size=3) + #median OIB
annotate("text",x=stat_OIB[4,2], y=-50, label = "tilde(x)", col="red", parse=T) + #median OIB
annotate("point", x=stat_IAB[1,2], y=0, shape=21, col="blue", fill="blue", size=3) + #mean IAB
annotate("text",x=stat_IAB[1,2], y=-50, label = "bar(x)", col="blue", parse=T) + #mean IAB
annotate("point", x=stat_IAB[4,2], y=0, shape=21, col="blue", fill="white", stroke=1, size=3) + #median IAB
annotate("text",x=stat_IAB[4,2], y=-50, label = "tilde(x)", col="blue", parse=T) + #median IAB
annotate("text", x=2.5, y = 2000, label = "IAB", hjust = 0, size = 4) +
annotate("text", x=2.5, y = 1800, label = "mean = 0.457", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 1600, label = "median = 0.364", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 1400, label = "SD = 0.133 - 0.781", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 1000, label = "OIB", hjust = 0, size = 4) +
annotate("text", x=2.5, y = 800, label = "mean = 1.338", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 600, label = "median = 1.266", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 400, label = "SD = 0.933 - 1.744", hjust = 0, size = 3.5) +
scale_x_continuous(limits=c(0,2), breaks = c(0,.86,1,2)) +
labs(x='Nb / La', y='Count') + theme_bw(base_size=12) +
coord_cartesian(ylim = c(-20, 2400), clip = "off") +
annotate("text", -Inf, Inf, label = "B", size = 7, hjust = -1, vjust = 2) +
theme(line=element_blank(), axis.ticks=element_line(),
legend.title=element_blank())
B
#save
pdf(here("analysis","figures","Figure_2.pdf"), width=10, height=16)
A / B
dev.off()
