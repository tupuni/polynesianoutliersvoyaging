E_11_06_07_spider <- d_spider %>%
mutate(var = fct_relevel(var,
"Cs","Rb","Ba","Th","U","Nb","Ta","La","Ce","Pr",
"Nd","Sr","Sm","Zr","Ti","Eu","Gd","Tb",
"Dy","Y","Er","Yb","Lu")) %>%
ggplot(aes(x=var, y=conc, shape=factor(Location), color=factor(Location),
fill=factor(Location), group=Sample)) +
geom_line(size=.5) + geom_point(size=2, stroke=.5) +
geom_line(data=s_spider, size=.5) + geom_point(data=s_spider, size=2, stroke=.5) +
scale_shape_manual(values=shapes) + scale_color_manual(values=cols) +
scale_fill_manual(values=cols) +
theme_classic() + theme(axis.line=element_blank()) +
theme(panel.border=element_rect(colour="black", fill=NA, size=.25),
axis.ticks.length.x = unit(-.15, "cm"), axis.text = element_text(size=8),
axis.ticks.x.top = element_line(size=.25),
axis.title = element_blank(), axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust=1, margin = margin(r=5)),
legend.title = element_blank(),legend.text = element_text(size = 6),
legend.key.size = unit(.25, 'cm'),
legend.position = c(.77,.82), legend.direction = "vertical") +
guides(color = guide_legend(override.aes = list(size = 2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) + # dodge = 2 to stagger
scale_y_log10(breaks=c(1,10,100,1000), limits=c(.11,1000),
expand = c(0, 0), labels = scales::comma_format(big.mark = ""))+
annotation_logticks(sides="l", size = .25, outside = TRUE, long = unit(0.15, "cm"),
mid = unit(0, "cm"), short = unit(0, "cm"))+
coord_cartesian(clip = "off")
E_11_06_07_spider
pdf(here("analysis","figures","Figure_5","Fig5-b.pdf"), width=3, height=2)
E_11_06_07_spider
dev.off()
E_11_06_07_spider <- d_spider %>%
mutate(var = fct_relevel(var,
"Cs","Rb","Ba","Th","U","Nb","Ta","La","Ce","Pr",
"Nd","Sr","Sm","Zr","Ti","Eu","Gd","Tb",
"Dy","Y","Er","Yb","Lu")) %>%
ggplot(aes(x=var, y=conc, shape=factor(Location), color=factor(Location),
fill=factor(Location), group=Sample)) +
geom_line(size=.5) + geom_point(size=2, stroke=.5) +
geom_line(data=s_spider, size=.5) + geom_point(data=s_spider, size=2, stroke=.5) +
scale_shape_manual(values=shapes) + scale_color_manual(values=cols) +
scale_fill_manual(values=cols) +
theme_classic() + theme(axis.line=element_blank()) +
theme(panel.border=element_rect(colour="black", fill=NA, size=.25),
axis.ticks.length.x = unit(-.15, "cm"), axis.text = element_text(size=8),
axis.ticks.x.top = element_line(size=.25),
axis.title = element_blank(), axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust=1, margin = margin(r=5)),
legend.title = element_blank(),legend.text = element_text(size = 6),
legend.key.size = unit(.25, 'cm'),
legend.position = c(.74,.84), legend.direction = "vertical") +
guides(color = guide_legend(override.aes = list(size = 2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) + # dodge = 2 to stagger
scale_y_log10(breaks=c(1,10,100,1000), limits=c(.11,1000),
expand = c(0, 0), labels = scales::comma_format(big.mark = ""))+
annotation_logticks(sides="l", size = .25, outside = TRUE, long = unit(0.15, "cm"),
mid = unit(0, "cm"), short = unit(0, "cm"))+
coord_cartesian(clip = "off")
pdf(here("analysis","figures","Figure_5","Fig5-b.pdf"), width=3, height=2)
E_11_06_07_spider
dev.off()
s <- joined_data %>% filter(Sample %in% c(
"E-11-10","E-11-11","E-11-13","E-11-16","E-11-18","E-11-18dup",
"E-11-19","E-11-06","E-11-07")) %>%
mutate(
Location = case_when(
grepl("E-11-10", Sample) ~ "Vanuatu Arc",
grepl("E-11-11", Sample) ~ "Vanuatu Arc",
grepl("E-11-13", Sample) ~ "Vanuatu Arc",
grepl("E-11-16", Sample) ~ "Vanuatu Arc",
grepl("E-11-18", Sample) ~ "Vanuatu Arc",
grepl("E-11-06", Sample) ~ "E-11-06",
grepl("E-11-07", Sample) ~ "E-11-07")) %>%
dplyr::select(Sample,Location,Cs,Rb,Ba,Nb,La,Zr,Ti)
s[s == 0] <- NA # Replace 0 with NA
s <- s[rowSums(is.na(s)) == 0,] # removes rows with missing info for PCA
s <- s[c("3","4","5","6","7","1","2"),]
IAB <- q5 %>% dplyr::select(Sample,Location,Cs,Rb,Ba,Nb,La,Zr,Ti)
IAB <- full_join(IAB,s[1:5,])
IAB[IAB == 0] <- NA # Replace 0 with NA
IAB <- IAB[rowSums(is.na(IAB)) == 0,] # removes rows with missing info for PCA
s <- s[6:7,]
res.pca <- prcomp(IAB[,3:9],  scale = TRUE, center = TRUE) # Dimension reduction using PCA
eig <- get_eig(res.pca)
pred <- stats::predict(res.pca, s[,3:9])
pred <- cbind(s[,1:2], pred)
res.pca.df <- cbind(IAB[,1:2], (as.data.frame(res.pca$x)))
d_pca <- full_join(res.pca.df, pred)
dist <- data.frame(
Sample = c(d_pca[1:86,"Sample"]),
Location = c(d_pca[1:86,"Location"]),
PC1 = c(sqrt(((d_pca[87:88,"PC1"])-d_pca[1:86,"PC1"])^2)),
PC2 = c(sqrt(((d_pca[87:88,"PC2"])-d_pca[1:86,"PC2"])^2)),
PC3 = c(sqrt(((d_pca[87:88,"PC3"])-d_pca[1:86,"PC3"])^2)),
PC4 = c(sqrt(((d_pca[87:88,"PC4"])-d_pca[1:86,"PC4"])^2)),
PC5 = c(sqrt(((d_pca[87:88,"PC5"])-d_pca[1:86,"PC5"])^2)),
PC6 = c(sqrt(((d_pca[87:88,"PC6"])-d_pca[1:86,"PC6"])^2)),
PC7 = c(sqrt(((d_pca[87:88,"PC7"])-d_pca[1:86,"PC7"])^2))) %>%
mutate(weight_mean = (
(PC1*eig[1,2])+(PC2*eig[2,2])+(PC3*eig[3,2])+(PC4*eig[4,2])+(PC5*eig[5,2])+
(PC6*eig[6,2])+(PC7*eig[7,2])) / (sum(eig[1:7,2])))
head(dist[order(dist$weight_mean),] %>% dplyr::select("Sample","Location","weight_mean"))
shapes <- c("[E-11-11] Emae (Vanuatu)"=1,
"E-11-06"=1,"E-11-07"=8)
shapes <- c("[E-11-11] Emae (Vanuatu)"=1,"E-11-06"=1,"E-11-07"=8)
cols <- c("[E-11-11] Emae (Vanuatu)"="#7AD04F","E-11-06"="red","E-11-07"="red")
E_11_06_07_spider <- d_spider %>%
mutate(var = fct_relevel(var,
"Cs","Rb","Ba","Th","U","Nb","Ta","La","Ce","Pr",
"Nd","Sr","Sm","Zr","Ti","Eu","Gd","Tb",
"Dy","Y","Er","Yb","Lu")) %>%
ggplot(aes(x=var, y=conc, shape=factor(Location), color=factor(Location),
fill=factor(Location), group=Sample)) +
geom_line(size=.5) + geom_point(size=2, stroke=.5) +
geom_line(data=s_spider, size=.5) + geom_point(data=s_spider, size=2, stroke=.5) +
scale_shape_manual(values=shapes) + scale_color_manual(values=cols) +
scale_fill_manual(values=cols) +
theme_classic() + theme(axis.line=element_blank()) +
theme(panel.border=element_rect(colour="black", fill=NA, size=.25),
axis.ticks.length.x = unit(-.15, "cm"), axis.text = element_text(size=8),
axis.ticks.x.top = element_line(size=.25),
axis.title = element_blank(), axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust=1, margin = margin(r=5)),
legend.title = element_blank(),legend.text = element_text(size = 6),
legend.key.size = unit(.25, 'cm'),
legend.position = c(.74,.84), legend.direction = "vertical") +
guides(color = guide_legend(override.aes = list(size = 2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) + # dodge = 2 to stagger
scale_y_log10(breaks=c(1,10,100,1000), limits=c(.11,1000),
expand = c(0, 0), labels = scales::comma_format(big.mark = ""))+
annotation_logticks(sides="l", size = .25, outside = TRUE, long = unit(0.15, "cm"),
mid = unit(0, "cm"), short = unit(0, "cm"))+
coord_cartesian(clip = "off")
E_11_06_07_spider
d_spider
E_11_06_07_spider <- d_spider %>%
dplyr::filter(Sample %in% "E-11-11") %>%
mutate(var = fct_relevel(var,
"Cs","Rb","Ba","Th","U","Nb","Ta","La","Ce","Pr",
"Nd","Sr","Sm","Zr","Ti","Eu","Gd","Tb",
"Dy","Y","Er","Yb","Lu")) %>%
ggplot(aes(x=var, y=conc, shape=factor(Location), color=factor(Location),
fill=factor(Location), group=Sample)) +
geom_line(size=.5) + geom_point(size=2, stroke=.5) +
geom_line(data=s_spider, size=.5) + geom_point(data=s_spider, size=2, stroke=.5) +
scale_shape_manual(values=shapes) + scale_color_manual(values=cols) +
scale_fill_manual(values=cols) +
theme_classic() + theme(axis.line=element_blank()) +
theme(panel.border=element_rect(colour="black", fill=NA, size=.25),
axis.ticks.length.x = unit(-.15, "cm"), axis.text = element_text(size=8),
axis.ticks.x.top = element_line(size=.25),
axis.title = element_blank(), axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust=1, margin = margin(r=5)),
legend.title = element_blank(),legend.text = element_text(size = 6),
legend.key.size = unit(.25, 'cm'),
legend.position = c(.74,.84), legend.direction = "vertical") +
guides(color = guide_legend(override.aes = list(size = 2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) + # dodge = 2 to stagger
scale_y_log10(breaks=c(1,10,100,1000), limits=c(.11,1000),
expand = c(0, 0), labels = scales::comma_format(big.mark = ""))+
annotation_logticks(sides="l", size = .25, outside = TRUE, long = unit(0.15, "cm"),
mid = unit(0, "cm"), short = unit(0, "cm"))+
coord_cartesian(clip = "off")
E_11_06_07_spider
pdf(here("analysis","figures","Figure_5","Fig5-b.pdf"), width=3, height=2)
E_11_06_07_spider
dev.off()
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE id='634404' OR id='452052' OR id='634326' OR id='13440-GN1/4' OR
id='634330' OR id='13423-E5/11'") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")
d_spider <- d %>%
mutate(Location = case_when(
grepl("ULAWUN", LOCATION) ~ "Ulawun (New Britain)",
grepl("MANAM", LOCATION) ~ "Manam Is. (PNG)",
grepl("DAKATAUA", LOCATION) ~ "Dakataua (New Britain)")) %>%
dplyr::select(Sample,Location,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu) %>%
normalize_to_pm()
s_spider <- joined_data %>% filter(Sample %in% c("K-12-28")) %>%
mutate(Location = case_when(grepl("K-12-28", Sample) ~ "K-12-28")) %>%
dplyr::select(Sample,Location,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu) %>%
normalize_to_pm()
shapes <- c("Ulawun (New Britain)"=0,
"Manam Is. (PNG)"=1,
"Dakataua (New Britain)"=2,
"K-12-28"=3)
cols <- c("Ulawun (New Britain)"="#25A782",
"Manam Is. (PNG)"="#25A782",
"Dakataua (New Britain)"="#25A782",
"K-12-28"="red")
shapes <- c(#"Ulawun (New Britain)"=0,
"Manam Is. (PNG)"=1,
"Dakataua (New Britain)"=2,
"K-12-28"=3)
cols <- c(#"Ulawun (New Britain)"="#25A782",
"Manam Is. (PNG)"="#25A782",
"Dakataua (New Britain)"="#25A782",
"K-12-28"="red")
View(d_spider)
K_12_28_spider <- d_spider %>%
dplyr::filter(Location %in% "Dakataua (New Britain)", "Manam Is. (PNG)") %>%
mutate(var = fct_relevel(var,
"Cs","Rb","Ba","Th","U","Nb","Ta","La","Ce","Pr",
"Nd","Sr","Sm","Zr","Ti","Eu","Gd","Tb",
"Dy","Y","Er","Yb","Lu")) %>%
ggplot(aes(x=var, y=conc, shape=factor(Location), color=factor(Location),
fill=factor(Location), group=Sample)) +
geom_line(size=.5) + geom_point(size=2, stroke=.5) +
geom_line(data=s_spider, size=.5) + geom_point(data=s_spider, size=2, stroke=.5) +
scale_shape_manual(values=shapes) + scale_color_manual(values=cols) +
scale_fill_manual(values=cols) +
theme_classic() + theme(axis.line=element_blank()) +
theme(panel.border=element_rect(colour="black", fill=NA, size=.25),
axis.ticks.length.x = unit(-.15, "cm"), axis.text = element_text(size=8),
axis.ticks.x.top = element_line(size=.25),
axis.title = element_blank(), axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust=1, margin = margin(r=5)),
legend.title = element_blank(),legend.text = element_text(size = 6),
legend.key.size = unit(.25, 'cm'),
legend.position = c(.75,.82), legend.direction = "vertical") +
guides(color = guide_legend(override.aes = list(size = 2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) + # dodge = 2 to stagger
scale_y_log10(breaks=c(1,10,100,1000), limits=c(.11,1000),
expand = c(0, 0), labels = scales::comma_format(big.mark = ""))+
annotation_logticks(sides="l", size = .25, outside = TRUE, long = unit(0.15, "cm"),
mid = unit(0, "cm"), short = unit(0, "cm"))+
coord_cartesian(clip = "off")
K_12_28_spider <- d_spider %>%
dplyr::filter(Location %in% "Dakataua (New Britain)" & "Manam Is. (PNG)") %>%
mutate(var = fct_relevel(var,
"Cs","Rb","Ba","Th","U","Nb","Ta","La","Ce","Pr",
"Nd","Sr","Sm","Zr","Ti","Eu","Gd","Tb",
"Dy","Y","Er","Yb","Lu")) %>%
ggplot(aes(x=var, y=conc, shape=factor(Location), color=factor(Location),
fill=factor(Location), group=Sample)) +
geom_line(size=.5) + geom_point(size=2, stroke=.5) +
geom_line(data=s_spider, size=.5) + geom_point(data=s_spider, size=2, stroke=.5) +
scale_shape_manual(values=shapes) + scale_color_manual(values=cols) +
scale_fill_manual(values=cols) +
theme_classic() + theme(axis.line=element_blank()) +
theme(panel.border=element_rect(colour="black", fill=NA, size=.25),
axis.ticks.length.x = unit(-.15, "cm"), axis.text = element_text(size=8),
axis.ticks.x.top = element_line(size=.25),
axis.title = element_blank(), axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust=1, margin = margin(r=5)),
legend.title = element_blank(),legend.text = element_text(size = 6),
legend.key.size = unit(.25, 'cm'),
legend.position = c(.75,.82), legend.direction = "vertical") +
guides(color = guide_legend(override.aes = list(size = 2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) + # dodge = 2 to stagger
scale_y_log10(breaks=c(1,10,100,1000), limits=c(.11,1000),
expand = c(0, 0), labels = scales::comma_format(big.mark = ""))+
annotation_logticks(sides="l", size = .25, outside = TRUE, long = unit(0.15, "cm"),
mid = unit(0, "cm"), short = unit(0, "cm"))+
coord_cartesian(clip = "off")
d_spider %>%
dplyr::filter(Location %in% "Dakataua (New Britain)" & "Manam Is. (PNG)")
K_12_28_spider <- d_spider %>%
dplyr::filter(Location %in% c("Dakataua (New Britain)", "Manam Is. (PNG)")) %>%
mutate(var = fct_relevel(var,
"Cs","Rb","Ba","Th","U","Nb","Ta","La","Ce","Pr",
"Nd","Sr","Sm","Zr","Ti","Eu","Gd","Tb",
"Dy","Y","Er","Yb","Lu")) %>%
ggplot(aes(x=var, y=conc, shape=factor(Location), color=factor(Location),
fill=factor(Location), group=Sample)) +
geom_line(size=.5) + geom_point(size=2, stroke=.5) +
geom_line(data=s_spider, size=.5) + geom_point(data=s_spider, size=2, stroke=.5) +
scale_shape_manual(values=shapes) + scale_color_manual(values=cols) +
scale_fill_manual(values=cols) +
theme_classic() + theme(axis.line=element_blank()) +
theme(panel.border=element_rect(colour="black", fill=NA, size=.25),
axis.ticks.length.x = unit(-.15, "cm"), axis.text = element_text(size=8),
axis.ticks.x.top = element_line(size=.25),
axis.title = element_blank(), axis.ticks.y = element_blank(),
axis.text.y = element_text(hjust=1, margin = margin(r=5)),
legend.title = element_blank(),legend.text = element_text(size = 6),
legend.key.size = unit(.25, 'cm'),
legend.position = c(.75,.82), legend.direction = "vertical") +
guides(color = guide_legend(override.aes = list(size = 2))) +
scale_x_discrete(guide = guide_axis(n.dodge = 2)) + # dodge = 2 to stagger
scale_y_log10(breaks=c(1,10,100,1000), limits=c(.11,1000),
expand = c(0, 0), labels = scales::comma_format(big.mark = ""))+
annotation_logticks(sides="l", size = .25, outside = TRUE, long = unit(0.15, "cm"),
mid = unit(0, "cm"), short = unit(0, "cm"))+
coord_cartesian(clip = "off")
K_12_28_spider
#### K_12_28 ####
ranges_s_IAB[4,1:35]
IAB <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
`SIO2(WT%)` > 52.1 AND `SIO2(WT%)` < 55.1 AND
file_id= '2022-06-PVFZCE_BISMARCK_ARC_NEW_BRITAIN_ARC.csv'") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "") %>%
rename(Location=LOCATION)%>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
IAB %>% group_by(Location) %>% tally()
IAB <- IAB %>% dplyr::select(Sample,Location,Rb,Ba,Nb,La,Ce,Nd,Sr,Eu,Sr,Zr,Y)
is.na(IAB) <- sapply(IAB, is.infinite) #replace Inf by NA
IAB[IAB == 0] <- NA # Replace 0 with NA
IAB <- IAB[rowSums(is.na(IAB)) == 0,] # removes rows with missing info for PCA
s <- joined_data %>% filter(Sample %in% c("K-12-28")) %>%
mutate(Location = case_when(grepl("K-12-28", Sample) ~ "K-12-28")) %>%
dplyr::select(Sample,Location,Rb,Ba,Nb,La,Ce,Nd,Eu,Sr,Zr,Y)
s <- joined_data %>% filter(Sample %in% c("K-12-28")) %>%
mutate(Location = case_when(grepl("K-12-28", Sample) ~ "K-12-28")) %>%
dplyr::select(Sample,Location,Rb,Ba,Nb,La,Ce,Nd,Eu,Sr,Zr,Y)
s <- joined_data %>% filter(Sample %in% c("K-12-28")) %>%
mutate(Location = case_when(grepl("K-12-28", Sample) ~ "K-12-28")) %>%
plyr::select(Sample,Location,Rb,Ba,Nb,La,Ce,Nd,Sr,Eu,Sr,Zr,Y)
s <- joined_data %>% filter(Sample %in% c("K-12-28")) %>%
mutate(Location = case_when(grepl("K-12-28", Sample) ~ "K-12-28")) %>%
dplyr::select(Sample,Location,Rb,Ba,Nb,La,Ce,Nd,Sr,Eu,Sr,Zr,Y)
s[s == 0] <- NA # Replace 0 with NA
s <- s[rowSums(is.na(s)) == 0,] # removes rows with missing info for PCA
IAB <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
`SIO2(WT%)` > 52.1 AND `SIO2(WT%)` < 55.1 AND
file_id= '2022-06-PVFZCE_BISMARCK_ARC_NEW_BRITAIN_ARC.csv'") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "") %>%
rename(Location=LOCATION)%>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
IAB %>% group_by(Location) %>% tally()
IAB <- IAB %>% dplyr::select(Sample,Location,Rb,Ba,Nb,La,Ce,Nd,Sr,Eu,Sr,Zr,Y)
is.na(IAB) <- sapply(IAB, is.infinite) #replace Inf by NA
IAB[IAB == 0] <- NA # Replace 0 with NA
IAB <- IAB[rowSums(is.na(IAB)) == 0,] # removes rows with missing info for PCA
s <- joined_data %>% filter(Sample %in% c("K-12-28")) %>%
mutate(Location = case_when(grepl("K-12-28", Sample) ~ "K-12-28")) %>%
dplyr::select(Sample,Location,Rb,Ba,Nb,La,Ce,Nd,Sr,Eu,Sr,Zr,Y)
s[s == 0] <- NA # Replace 0 with NA
s <- s[rowSums(is.na(s)) == 0,] # removes rows with missing info for PCA
res.pca <- prcomp(IAB[,3:12], scale = TRUE, center = TRUE) # Dimension reduction using PCA
eig <- get_eig(res.pca)
pred <- stats::predict(res.pca, s[,3:12])
pred <- cbind(s[,1:2], pred)
res.pca.df <- cbind(IAB[,1:2], (as.data.frame(res.pca$x)))
d_pca <- full_join(res.pca.df, pred)
dist <- data.frame(
Sample = c(d_pca[1:57,"Sample"]),
Location = c(d_pca[1:57,"Location"]),
PC1 = c(sqrt(((d_pca[58,"PC1"])-d_pca[1:57,"PC1"])^2)),
PC2 = c(sqrt(((d_pca[58,"PC2"])-d_pca[1:57,"PC2"])^2)),
PC3 = c(sqrt(((d_pca[58,"PC3"])-d_pca[1:57,"PC3"])^2)),
PC4 = c(sqrt(((d_pca[58,"PC4"])-d_pca[1:57,"PC4"])^2)),
PC5 = c(sqrt(((d_pca[58,"PC5"])-d_pca[1:57,"PC5"])^2)),
PC6 = c(sqrt(((d_pca[58,"PC6"])-d_pca[1:57,"PC6"])^2)),
PC7 = c(sqrt(((d_pca[58,"PC7"])-d_pca[1:57,"PC7"])^2))) %>%
mutate(weight_mean = (
(PC1*eig[1,2])+(PC2*eig[2,2])+(PC3*eig[3,2])+(PC4*eig[4,2])+(PC5*eig[5,2])+
(PC6*eig[6,2])+(PC7*eig[7,2])) /
(sum(eig[1:7,2])))
head(dist[order(dist$weight_mean),] %>%
dplyr::select("Sample","Location","weight_mean"), 10)
#### plot ####
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE LOCATION LIKE '%ULAWUN%' OR
LOCATION LIKE '%MANAM%' OR
LOCATION LIKE '%DAKATAUA%'") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")
d
head(dist[order(dist$weight_mean),] %>%
dplyr::select("Sample","Location","weight_mean"), 10)
#### plot ####
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%'") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")
View(d)
#### plot ####
ranges_s_IAB[4,1]
#### plot ####
ranges_s_IAB[4,]
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%')") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%')") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")%>%
dplyr::select(Sample,Location,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu) %>%
d_spider <- d %>%
mutate(Location = case_when(
grepl("ULAWUN", LOCATION) ~ "Ulawun (New Britain)",
grepl("MANAM", LOCATION) ~ "Manam Is. (PNG)",
grepl("DAKATAUA", LOCATION) ~ "Dakataua (New Britain)")) %>%
dplyr::select(Sample,Location,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu) %>%
normalize_to_pm()
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%')") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")%>%
dplyr::select(Sample,Location,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu) %>%
d_spider <- d %>%
mutate(Location = case_when(
grepl("ULAWUN", LOCATION) ~ "Ulawun (New Britain)",
grepl("MANAM", LOCATION) ~ "Manam Is. (PNG)",
grepl("DAKATAUA", LOCATION) ~ "Dakataua (New Britain)")) %>%
dplyr::select(Sample,Location,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu) %>%
normalize_to_pm()
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%')") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")%>%
dplyr::select(Sample,Location,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu)
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%')") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")%>%
dplyr::select(Sample,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu)
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%')") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")%>%
dplyr::select(Sample,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu)
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%')") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::select(Sample,lat,long,Cs,Rb,Ba,Th,U,Nb,Ta,La,Ce,Pr,
Nd,Sr,Sm,Zr,Ti,Eu,Gd,Tb,Dy,Y,Er,Yb,Lu)
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%')") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O()
#### plot ####
ranges_s_IAB[4,]
#### plot ####
ranges_s_IAB[4,]
ranges_s_IAB[4,]
d <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE (LOCATION LIKE '%NEW BRITAIN / ULAWUN%' OR
LOCATION LIKE '%MANAM / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / MANAM%' OR
LOCATION LIKE '%NEW BRITAIN / DAKATAUA%') AND
(`BA(PPM)` > 13.2 AND `BA(PPM)` < 39.6 AND
`BA(PPM)` > 13.2 AND `BA(PPM)` < 39.6 AND
`BA(PPM)` > 13.2 AND `BA(PPM)` < 39.6)") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
mutate_at("LOCATION", str_replace,
"BISMARCK ARC - NEW BRITAIN ARC / BISMARCK ARC - ", "")
