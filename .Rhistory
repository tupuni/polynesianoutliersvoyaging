(Nd143_Nd144 > 0.512342 & Nd143_Nd144 < 0.513368 &
Sr87_Sr86 > 0.704583 & Sr87_Sr86 < 0.705993 &
Pb206_Pb204 > 18.701 & Pb206_Pb204 < 19.079 &
Pb207_Pb204 > 15.431 & Pb207_Pb204 < 15.743 &
Pb208_Pb204 > 38.482 & Pb208_Pb204 < 39.260) |
(Nd143_Nd144 > 0.512358 & Nd143_Nd144 < 0.513384 &
Sr87_Sr86 > 0.704403 & Sr87_Sr86 < 0.705813 &
Pb206_Pb204 > 18.722 & Pb206_Pb204 < 19.1 &
Pb207_Pb204 > 15.427 & Pb207_Pb204 < 15.739 &
Pb208_Pb204 > 38.472 & Pb208_Pb204 < 39.25) |
(Nd143_Nd144 > 0.512342 & Nd143_Nd144 < 0.513368 &
Sr87_Sr86 > 0.704502 & Sr87_Sr86 < 0.705912 &
Pb206_Pb204 > 18.72 & Pb206_Pb204 < 19.098 &
Pb207_Pb204 > 15.445 & Pb207_Pb204 < 15.757 &
Pb208_Pb204 > 38.505 & Pb208_Pb204 < 39.283) |
(Nd143_Nd144 > 0.512359 & Nd143_Nd144 < 0.513385 &
Sr87_Sr86 > 0.704412 & Sr87_Sr86 < 0.705822 &
Pb206_Pb204 > 18.736 & Pb206_Pb204 < 19.114 &
Pb207_Pb204 > 15.429 & Pb207_Pb204 < 15.741 &
Pb208_Pb204 > 38.508 & Pb208_Pb204 < 39.286) |
(Nd143_Nd144 > 0.512348 & Nd143_Nd144 < 0.513374 &
Sr87_Sr86 > 0.704465 & Sr87_Sr86 < 0.705875 &
Pb206_Pb204 > 18.624 & Pb206_Pb204 < 19 &
Pb207_Pb204 > 15.425 & Pb207_Pb204 < 15.737 &
Pb208_Pb204 > 38.362 & Pb208_Pb204 < 39.138)) %>%
dplyr::filter(Location %in% c(
"Caroline islands","Samoan islands","Austral-Cook chain","Society islands",
"Hawai'i islands","Marquesas islands","Pitcairn-Gambier chain","Rapa Nui")) %>%
Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
ranges_s_OIB[1:6,2:35]
q12 <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA='SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING='OCEAN ISLAND' AND
((`SIO2(WT%)` > 45.2 AND `SIO2(WT%)` < 48.2 AND
`MGO(WT%)` > 3.08 AND `MGO(WT%)` < 6.08 AND
`NA2O(WT%)` > 2.08 AND `NA2O(WT%)` < 5.08 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.9 AND
`BA(PPM)` > 160 AND `BA(PPM)` < 480 AND
`TH(PPM)` > 1.95 AND `TH(PPM)` < 5.84 AND
`ND(PPM)` > 25.5 AND `ND(PPM)` < 76.5 AND
`NB(PPM)` > 24.8 AND `NB(PPM)` < 74.5 AND
`SM(PPM)` > 6.2 AND `SM(PPM)` < 18.6 AND
`YB(PPM)` > 1.6 AND `YB(PPM)` < 4.8) OR
(`SIO2(WT%)` > 44.3 AND `SIO2(WT%)` < 47.3 AND
`MGO(WT%)` > 3.52 AND `MGO(WT%)` < 6.52 AND
`NA2O(WT%)` > 2 AND `NA2O(WT%)` < 5 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.82 AND
`BA(PPM)` > 137 AND `BA(PPM)` < 413 AND
`TH(PPM)` > 1.86 AND `TH(PPM)` < 5.60 AND
`ND(PPM)` > 25.6 AND `ND(PPM)` < 76.9 AND
`NB(PPM)` > 24.7 AND `NB(PPM)` < 74.1 AND
`SM(PPM)` > 6 AND `SM(PPM)` < 18.1 AND
`YB(PPM)` > 1.62 AND `YB(PPM)` < 4.86) OR
(`SIO2(WT%)` > 43.5 AND `SIO2(WT%)` < 46.5 AND
`MGO(WT%)` > 3.79 AND `MGO(WT%)` < 6.79 AND
`NA2O(WT%)` > 1.9 AND `NA2O(WT%)` < 4.9 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.78 AND
`BA(PPM)` > 126 AND `BA(PPM)` < 378 AND
`TH(PPM)` > 1.58 AND `TH(PPM)` < 4.74 AND
`ND(PPM)` > 23.7 AND `ND(PPM)` < 71.1 AND
`NB(PPM)` > 21 AND `NB(PPM)` < 63.1 AND
`SM(PPM)` > 5.65 AND `SM(PPM)` < 16.95 AND
`YB(PPM)` > 1.56 AND `YB(PPM)` < 4.68) OR
(`SIO2(WT%)` > 45.9 AND `SIO2(WT%)` < 48.9 AND
`MGO(WT%)` > 3.44 AND `MGO(WT%)` < 6.44 AND
`NA2O(WT%)` > 2.18 AND `NA2O(WT%)` < 5.18 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.99 AND
`BA(PPM)` > 162 AND `BA(PPM)` < 488 AND
`TH(PPM)` > 2.13 AND `TH(PPM)` < 6.39 AND
`ND(PPM)` > 26.8 AND `ND(PPM)` < 80.5 AND
`NB(PPM)` > 24.3 AND `NB(PPM)` < 72.9 AND
`SM(PPM)` > 6.35 AND `SM(PPM)` < 19 AND
`YB(PPM)` > 1.49 AND `YB(PPM)` < 4.46) OR
(`SIO2(WT%)` > 44.1 AND `SIO2(WT%)` < 47.1 AND
`MGO(WT%)` > 4.15 AND `MGO(WT%)` < 7.15 AND
`NA2O(WT%)` > 1.8 AND `NA2O(WT%)` < 4.8 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.72 AND
`BA(PPM)` > 128 AND `BA(PPM)` < 385 AND
`TH(PPM)` > 1.58 AND `TH(PPM)` < 4.74 AND
`ND(PPM)` > 21.7 AND `ND(PPM)` < 65.1 AND
`NB(PPM)` > 20.4 AND `NB(PPM)` < 61.2 AND
`SM(PPM)` > 5.35 AND `SM(PPM)` < 16 AND
`YB(PPM)` > 1.4 AND `YB(PPM)` < 4.19) OR
(`SIO2(WT%)` > 45.7 AND `SIO2(WT%)` < 48.7 AND
`MGO(WT%)` > 3.10 AND `MGO(WT%)` < 6.10 AND
`NA2O(WT%)` > 2.08 AND `NA2O(WT%)` < 5.08 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.85 AND
`BA(PPM)` > 143 AND `BA(PPM)` < 431 AND
`TH(PPM)` > 1.84 AND `TH(PPM)` < 5.52 AND
`ND(PPM)` > 27.3 AND `ND(PPM)` < 82 AND
`NB(PPM)` > 23.5 AND `NB(PPM)` < 70.5 AND
`SM(PPM)` > 6.65 AND `SM(PPM)` < 19.95 AND
`YB(PPM)` > 1.57 AND `YB(PPM)` < 4.71))") %>%
dplyr::filter(!grepl("MURUROA|FANGATAUFA",LOCATION)) %>%
get_georoc_location() %>% dplyr::filter(Location != "na") %>% rename_georoc() %>%
dplyr::filter(Location %in% c(
"Samoan islands","Austral-Cook chain","Society islands","Marquesas islands")) %>%
Ti_from_TiO2() %>% K_from_K2O() %>% dplyr::select(
Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
q13 <- dbGetQuery(pofatu,
"SELECT s.id AS sample_id, s.sample_category, s.location_region,
s.location_subregion, s.location_latitude, s.location_longitude,
max(CASE WHEN m.parameter='SiO2 [%]' then m.value END) AS 'SiO2 [%]',
max(CASE WHEN m.parameter='TiO2 [%]' then m.value END) AS 'TiO2 [%]',
max(CASE WHEN m.parameter='Al2O3 [%]' then m.value END) AS 'Al2O3 [%]',
max(CASE WHEN m.parameter='Fe2O3 [%]' then m.value END) AS 'Fe2O3 [%]',
max(CASE WHEN m.parameter='FeO [%]' then m.value END) AS 'FeO [%]',
max(CASE WHEN m.parameter='MnO [%]' then m.value END) AS 'MnO [%]',
max(CASE WHEN m.parameter='MgO [%]' then m.value END) AS 'MgO [%]',
max(CASE WHEN m.parameter='CaO [%]' then m.value END) AS 'CaO [%]',
max(CASE WHEN m.parameter='Na2O [%]' then m.value END) AS 'Na2O [%]',
max(CASE WHEN m.parameter='K2O [%]' then m.value END) AS 'K2O [%]',
max(CASE WHEN m.parameter='Li [ppm]' then m.value END) AS 'Li [ppm]',
max(CASE WHEN m.parameter='Sc [ppm]' then m.value END) AS 'Sc [ppm]',
max(CASE WHEN m.parameter='Ti [ppm]' then m.value END) AS 'Ti [ppm]',
max(CASE WHEN m.parameter='V [ppm]' then m.value END) AS 'V [ppm]',
max(CASE WHEN m.parameter='Cr [ppm]' then m.value END) AS 'Cr [ppm]',
max(CASE WHEN m.parameter='Co [ppm]' then m.value END) AS 'Co [ppm]',
max(CASE WHEN m.parameter='Ni [ppm]' then m.value END) AS 'Ni [ppm]',
max(CASE WHEN m.parameter='Cu [ppm]' then m.value END) AS 'Cu [ppm]',
max(CASE WHEN m.parameter='Zn [ppm]' then m.value END) AS 'Zn [ppm]',
max(CASE WHEN m.parameter='As [ppm]' then m.value END) AS 'As [ppm]',
max(CASE WHEN m.parameter='Rb [ppm]' then m.value END) AS 'Rb [ppm]',
max(CASE WHEN m.parameter='Sr [ppm]' then m.value END) AS 'Sr [ppm]',
max(CASE WHEN m.parameter='Y [ppm]' then m.value END) AS 'Y [ppm]',
max(CASE WHEN m.parameter='Zr [ppm]' then m.value END) AS 'Zr [ppm]',
max(CASE WHEN m.parameter='Nb [ppm]' then m.value END) AS 'Nb [ppm]',
max(CASE WHEN m.parameter='Cd [ppm]' then m.value END) AS 'Cd [ppm]',
max(CASE WHEN m.parameter='Cs [ppm]' then m.value END) AS 'Cs [ppm]',
max(CASE WHEN m.parameter='Ba [ppm]' then m.value END) AS 'Ba [ppm]',
max(CASE WHEN m.parameter='La [ppm]' then m.value END) AS 'La [ppm]',
max(CASE WHEN m.parameter='Ce [ppm]' then m.value END) AS 'Ce [ppm]',
max(CASE WHEN m.parameter='Pr [ppm]' then m.value END) AS 'Pr [ppm]',
max(CASE WHEN m.parameter='Nd [ppm]' then m.value END) AS 'Nd [ppm]',
max(CASE WHEN m.parameter='Sm [ppm]' then m.value END) AS 'Sm [ppm]',
max(CASE WHEN m.parameter='Eu [ppm]' then m.value END) AS 'Eu [ppm]',
max(CASE WHEN m.parameter='Gd [ppm]' then m.value END) AS 'Gd [ppm]',
max(CASE WHEN m.parameter='Tb [ppm]' then m.value END) AS 'Tb [ppm]',
max(CASE WHEN m.parameter='Dy [ppm]' then m.value END) AS 'Dy [ppm]',
max(CASE WHEN m.parameter='Ho [ppm]' then m.value END) AS 'Ho [ppm]',
max(CASE WHEN m.parameter='Er [ppm]' then m.value END) AS 'Er [ppm]',
max(CASE WHEN m.parameter='Tm [ppm]' then m.value END) AS 'Tm [ppm]',
max(CASE WHEN m.parameter='Yb [ppm]' then m.value END) AS 'Yb [ppm]',
max(CASE WHEN m.parameter='Lu [ppm]' then m.value END) AS 'Lu [ppm]',
max(CASE WHEN m.parameter='Hf [ppm]' then m.value END) AS 'Hf [ppm]',
max(CASE WHEN m.parameter='Ta [ppm]' then m.value END) AS 'Ta [ppm]',
max(CASE WHEN m.parameter='Tl [ppm]' then m.value END) AS 'Tl [ppm]',
max(CASE WHEN m.parameter='Pb [ppm]' then m.value END) AS 'Pb [ppm]',
max(CASE WHEN m.parameter='Th [ppm]' then m.value END) AS 'Th [ppm]',
max(CASE WHEN m.parameter='U [ppm]' then m.value END) AS 'U [ppm]',
max(CASE WHEN m.parameter='Nd143_Nd144' then m.value END) AS 'Nd143_Nd144',
max(CASE WHEN m.parameter='Sr87_Sr86' then m.value END) AS 'Sr87_Sr86',
max(CASE WHEN m.parameter='Pb206_Pb204' then m.value END) AS 'Pb206_Pb204',
max(CASE WHEN m.parameter='Pb207_Pb204' then m.value END) AS 'Pb207_Pb204',
max(CASE WHEN m.parameter='Pb208_Pb204' then m.value END) AS 'Pb208_Pb204'
FROM 'samples.csv' AS s JOIN 'measurements.csv' AS m ON s.id=m.sample_id
WHERE s.sample_category = 'SOURCE' AND
m.parameter IN ('SiO2 [%]', 'TiO2 [%]', 'Al2O3 [%]', 'Fe2O3 [%]', 'FeO [%]',
'MnO [%]', 'MgO [%]', 'CaO [%]', 'Na2O [%]', 'K2O [%]',
'Li [ppm]', 'Sc [ppm]', 'Ti [ppm]', 'V [ppm]',
'Cr [ppm]', 'Co [ppm]', 'Ni [ppm]', 'Cu [ppm]', 'Zn [ppm]', 'As [ppm]',
'Rb [ppm]', 'Sr [ppm]', 'Y [ppm]', 'Zr [ppm]', 'Nb [ppm]', 'Cd [ppm]',
'Cs [ppm]', 'Ba [ppm]', 'La [ppm]', 'Ce [ppm]', 'Pr [ppm]', 'Nd [ppm]',
'Sm [ppm]', 'Eu [ppm]', 'Gd [ppm]', 'Tb [ppm]', 'Dy [ppm]', 'Ho [ppm]',
'Er [ppm]', 'Tm [ppm]', 'Yb [ppm]', 'Lu [ppm]', 'Hf [ppm]', 'Ta [ppm]',
'Tl [ppm]', 'Pb [ppm]', 'Th [ppm]', 'U [ppm]', 'Nd143_Nd144', 'Sr87_Sr86',
'Pb206_Pb204', 'Pb207_Pb204', 'Pb208_Pb204') GROUP BY sample_id") %>%
rename_pofatu_elements() %>% pofatu_location() %>%
dplyr::filter(Location %in% c(
"Samoan islands","Austral-Cook chain","Society islands","Marquesas islands")) %>%
Ti_from_TiO2() %>% K_from_K2O() %>% dplyr::select(
Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204) %>%
dplyr::filter((SiO2 > 45.2 & SiO2 < 48.2 &
MgO > 3.08 & MgO < 6.08 &
Na2O > 2.08 & Na2O < 5.08 &
K2O > 0 & K2O < 2.9 &
Ba > 160 & Ba < 480 &
Th > 1.95 & Th < 5.84 &
Nb > 24.8 & Nb < 74.5 &
Nd > 25.5 & Nd < 76.5 &
Sm > 6.2 & Sm < 18.6 &
Yb > 1.6 & Yb < 4.8) |
(SiO2 > 44.3 & SiO2 < 47.3 &
MgO > 3.52 & MgO < 6.52 &
Na2O > 2 & Na2O < 5 &
K2O > 0 & K2O < 2.82 &
Ba > 137 & Ba < 413 &
Th > 1.86 & Th < 5.60 &
Nb > 24.7 & Nb < 74.1 &
Nd > 25.6 & Nd < 76.9 &
Sm > 6 & Sm < 18.1 &
Yb > 1.62 & Yb < 4.86) |
(SiO2 > 43.5 & SiO2 < 46.5 &
MgO > 3.79 & MgO < 6.79 &
Na2O > 1.9 & Na2O < 4.9 &
K2O > 0 & K2O < 2.78 &
Ba > 126 & Ba < 378 &
Th > 1.58 & Th < 4.74 &
Nb > 21 & Nb < 63.1 &
Nd > 23.7 & Nd < 71.1 &
Sm > 5.65 & Sm < 16.95 &
Yb > 1.56 & Yb < 4.68) |
(SiO2 > 45.9 & SiO2 < 48.9 &
MgO > 3.44 & MgO < 6.44 &
Na2O > 2.18 & Na2O < 5.18 &
K2O > 0 & K2O < 2.99 &
Ba > 162 & Ba < 488 &
Th > 2.13 & Th < 6.39 &
Nb > 24.3 & Nb < 72.9 &
Nd > 26.8 & Nd < 80.5 &
Sm > 6.35 & Sm < 19 &
Yb > 1.49 & Yb < 4.46) |
(SiO2 > 44.1 & SiO2 < 47.1 &
MgO > 4.15 & MgO < 7.15 &
Na2O > 1.8 & Na2O < 4.8 &
K2O > 0 & K2O < 2.72 &
Ba > 128 & Ba < 385 &
Th > 1.58 & Th < 4.74 &
Nb > 20.4 & Nb < 61.2 &
Nd > 21.7 & Nd < 65.1 &
Sm > 5.35 & Sm < 16 &
Yb > 1.4 & Yb < 4.19) |
(SiO2 > 45.7 & SiO2 < 48.7 &
MgO > 3.10 & MgO < 6.10 &
Na2O > 2.08 & Na2O < 5.08 &
K2O > 0 & K2O < 2.85 &
Ba > 143 & Ba < 431 &
Th > 1.84 & Th < 5.52 &
Nb > 23.5 & Nb < 70.5 &
Nd > 27.3 & Nd < 82 &
Sm > 6.65 & Sm < 19.95 &
Yb > 1.57 & Yb < 4.71))
#### K-12-24 ####
ranges_s_OIB[7,]
ranges_s_OIB[7,36:39] %>% round(digits = 6)
ranges_s_OIB[7,40:45] %>% round(digits = 3)
q14 <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING='OCEAN ISLAND' AND
(ND143_ND144 > 0.512477 AND ND143_ND144 < 0.513503 AND
SR87_SR86 > 0.702761 AND SR87_SR86 < 0.704167 AND
PB206_PB204 > 18.221 AND PB206_PB204 < 18.589 AND
PB207_PB204 > 15.372 AND PB207_PB204 < 15.682 AND
PB208_PB204 > 37.927 AND PB208_PB204 < 38.693)") %>%
get_georoc_location() %>% filter(Location != "na") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
q14 %>% group_by(Location) %>% tally()
ranges_s_OIB[7,1:35]
q15 <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING='OCEAN ISLAND' AND
(`NA2O(WT%)` > 1.61 AND `NA2O(WT%)` < 4.61 AND
`K2O(WT%)` > 0 AND `K2O(WT%)` < 2.91 AND
`NB(PPM)` > 46.4 AND `NB(PPM)` < 139) AND
(file_id = '2022-06-WFJZKY_HAWAIIAN_ISLANDS_part1.csv' OR
file_id = '2022-06-WFJZKY_HAWAIIAN_ISLANDS_part2.csv' OR
file_id = '2022-06-WFJZKY_CAROLINE_ISLANDS.csv')") %>%
get_georoc_location() %>% filter(Location != "na") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
q15 %>% group_by(Location) %>% tally()
#### K-12-25 ####
ranges_s_OIB[8,]
ranges_s_OIB[8,36:39] %>% round(digits = 6)
ranges_s_OIB[8,40:45] %>% round(digits = 3)
q16 <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING='OCEAN ISLAND' AND
(ND143_ND144 > 0.512396 AND ND143_ND144 < 0.513422 AND
PB206_PB204 > 18.438 AND PB206_PB204 < 18.81 AND
PB207_PB204 > 15.427 AND PB207_PB204 < 15.739 AND
PB208_PB204 > 38.274 AND PB208_PB204 < 39.048)") %>%
get_georoc_location() %>% filter(Location != "na") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
q16 %>% group_by(Location) %>% tally()
joined_data[17,]
ranges_s_OIB[8,1:35]
q17 <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING='OCEAN ISLAND' AND
(`SIO2(WT%)` > 43.1 AND `SIO2(WT%)` < 46.1 AND
PB206_PB204 > 18.438 AND PB206_PB204 < 18.81 AND
PB207_PB204 > 15.427 AND PB207_PB204 < 15.739 AND
PB208_PB204 > 38.274 AND PB208_PB204 < 39.048)") %>%
get_georoc_location() %>% filter(Location != "na") %>% rename_georoc() %>%
Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
q17 %>% group_by(Location) %>% tally()
#### K-12-26 ####
ranges_s_OIB[9,]
ranges_s_OIB[9,36:39] %>% round(digits = 6)
ranges_s_OIB[9,40:45] %>% round(digits = 3)
q18 <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING='OCEAN ISLAND' AND
(ND143_ND144 > 0.51248 AND ND143_ND144 < 0.513506 AND
SR87_SR86 > 0.702897 AND SR87_SR86 < 0.704305 AND
PB206_PB204 > 18.54 AND PB206_PB204 < 18.914 AND
PB207_PB204 > 15.378 AND PB207_PB204 < 15.688 AND
PB208_PB204 > 38.059 AND PB208_PB204 < 38.827)") %>%
get_georoc_location() %>% filter(Location != "na") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
q18 %>% group_by(Location) %>% tally()
ranges_s_OIB[9,1:35]
q19 <- dbGetQuery(georoc,
"SELECT *
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING='OCEAN ISLAND' AND
(`SIO2(WT%)` > 42.9 AND `SIO2(WT%)` < 45.9 AND
PB207_PB204 > 15.378 AND PB207_PB204 < 15.688 AND
PB208_PB204 > 38.059 AND PB208_PB204 < 38.827) AND
(file_id = '2022-06-WFJZKY_CAROLINE_ISLANDS.csv' OR
file_id = '2022-06-WFJZKY_HAWAIIAN_ISLANDS_part1.csv' OR
file_id = '2022-06-WFJZKY_HAWAIIAN_ISLANDS_part2.csv')") %>%
get_georoc_location() %>% dplyr::filter(Location != "na") %>%
rename_georoc() %>% Ti_from_TiO2() %>% K_from_K2O() %>%
dplyr::select(Sample,Location,lat,long,SiO2,TiO2,Al2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
q19 %>% group_by(Location) %>% tally()
IAB_ref <- dbGetQuery(georoc,
"SELECT sample_id, reference_id
FROM 'citation'
WHERE sample_id='1776564'")
IAB_ref
IAB_ref <- dbGetQuery(georoc,
"SELECT id, reference
FROM 'reference'
WHERE id='23842'")
IAB_ref
require(here)
require(tidyverse)
require(RSQLite)
require(patchwork)
require(stats)
georoc <- dbConnect(RSQLite::SQLite(), path_to_georoc)
pofatu <- dbConnect(RSQLite::SQLite(), path_to_pofatu)
#### IAB ####
IAB <- dbGetQuery(georoc,
"SELECT TECTONIC_SETTING, id, file_id, LOCATION, LAND_OR_SEA,
ROCK_TYPE, `NB(PPM)`, `LA(PPM)`, LATITUDE_MAX, LONGITUDE_MAX
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING = 'CONVERGENT MARGIN'") %>%
rename(Nb="NB(PPM)",La="LA(PPM)",lat="LATITUDE_MAX",long="LONGITUDE_MAX") %>%
mutate(Nb_La = Nb/La) %>%
dplyr::select(file_id, id, LOCATION, Nb, La, Nb_La, lat, long)
is.na(IAB) <- sapply(IAB, is.infinite) # replaces Inf or -Inf by NA
IAB[IAB==0] <- NA # replaces 0 by NA
IAB <- IAB[complete.cases(IAB),] # removes rows with NA
IAB <- IAB %>% dplyr::filter(Nb_La < 3)
IAB <- IAB %>% dplyr::filter(Nb_La < 3)
summary(IAB$Nb_La)
sd <- (sqrt(sum((IAB$Nb_La - mean(IAB$Nb_La)) ^ 2 / (length(IAB$Nb_La) - 1))))
stat_IAB <- data.frame(
name = c("mean", "sd min", "sd max", "median"),
value = c(mean(IAB$Nb_La),
mean(IAB$Nb_La)-sd,
mean(IAB$Nb_La)+sd,
median(IAB$Nb_La))) %>% mutate(across(where(is.numeric), round, 3))
#### OIB ####
OIB <- dbGetQuery(georoc,
"SELECT TECTONIC_SETTING, id, file_id, LOCATION, LAND_OR_SEA,
ROCK_TYPE, `NB(PPM)`, `LA(PPM)`, LATITUDE_MAX, LONGITUDE_MAX
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
TECTONIC_SETTING = 'OCEAN ISLAND'") %>%
rename(Nb="NB(PPM)",La="LA(PPM)",lat="LATITUDE_MAX",long="LONGITUDE_MAX") %>%
mutate(Nb_La = Nb/La) %>%
dplyr::select(file_id, id, LOCATION, Nb, La, Nb_La, lat, long)
is.na(OIB) <- sapply(OIB, is.infinite) # replaces Inf or -Inf by NA
OIB[OIB==0] <- NA # replaces 0 by NA
OIB <- OIB[complete.cases(OIB),] # removes rows with NA
OIB <- OIB %>% filter(Nb_La < 3)
summary(OIB$Nb_La)
sd <- (sqrt(sum((OIB$Nb_La - mean(OIB$Nb_La)) ^ 2 / (length(OIB$Nb_La) - 1))))
stat_OIB <- data.frame(
name = c("mean", "sd min", "sd max", "median"),
value = c(mean(OIB$Nb_La),
mean(OIB$Nb_La)-sd,
mean(OIB$Nb_La)+sd,
median(OIB$Nb_La))) %>% mutate(across(where(is.numeric), round, 3))
#### plots ####
shapes <- c("E-11-03"=0,"E-11-06"=1,"E-11-07"=8,"E-11-10"=0,"E-11-11"=1,
"E-11-13"=2,"E-11-16"=5,"E-11-18"=6,"E-11-19"=8,"K-12-28"=3,"K-12-29"=4,
"E-11-08"=5,"E-11-08dup"=9,"T-12-06"=2,"T-12-06dup"=14,
"T-12-07"=7,"T-12-08"=6,"T-12-09"=10,"T-12-10"=11,"K-12-24"=12,
"K-12-25"=13,"K-12-26"=14)
cols <- c("E-11-03"="red","E-11-06"="red","E-11-07"="red","E-11-10"="#7AD04F",
"E-11-11"="#7AD04F","E-11-13"="#7AD04F","E-11-16"="#7AD04F",
"E-11-18"="#7AD04F","E-11-19"="#7AD04F","K-12-28"="red","K-12-29"="red",
"E-11-08"="red","E-11-08dup"="red","T-12-06"="red","T-12-06dup"="red",
"T-12-07"="red","T-12-08"="red","T-12-09"="red",
"T-12-10"="red","K-12-24"="red","K-12-25"="red","K-12-26"="red")
A <- traces %>% dplyr::filter(Type %in% c("Artefact", "Source")) %>%
ggplot() + geom_point(
aes(x=Nb/La, y=Sample, shape=factor(Sample), color=factor(Sample)), size=2) +
scale_shape_manual(values=shapes) +
scale_color_manual(values=cols) +
theme_bw(base_size=12, base_rect_size=1) +
scale_x_continuous(limits=c(0,3), breaks = c(0,.86,1,2,3)) +
theme(line=element_blank(),
axis.text = element_blank(), axis.title = element_blank(), axis.ticks = element_blank(),
legend.title = element_blank(), legend.text = element_text(size = 6),
legend.direction="horizontal",legend.position=c(.75,.45)) + #aspect.ratio=1
annotate("segment", x=.86, xend=.86, y=0, yend=23, size = 0.5, linetype = "longdash") +
annotate("text", -Inf, Inf, label = "A", size = 7, hjust = -1, vjust = 2)
A
B <- ggplot(OIB, aes(Nb_La)) +
geom_histogram(binwidth=.02, col="black", fill="red", size=.2, alpha=.4) + #OIB
annotate("rect",xmin=stat_OIB[2,2],xmax=stat_OIB[3,2],
ymin=-Inf,ymax=Inf,fill="red",alpha=.1) + #OIB
geom_histogram(data=IAB, binwidth=.02, col="black", fill="blue", size=.2, alpha=.4) + #IAB
annotate("rect",xmin=stat_IAB[2,2],xmax=stat_IAB[3,2],
ymin=-Inf,ymax=Inf,fill="blue",alpha=.1) + #IAB
annotate("point", x=stat_OIB[1,2], y=0, shape=21, col="red", fill="red", size=3) + #mean OIB
annotate("text",x=stat_OIB[1,2], y=-50, label = "bar(x)", col="red", parse=T) + #mean OIB
annotate("point", x=stat_OIB[4,2], y=0, shape=21, col="red", fill="white", stroke=1, size=3) + #median OIB
annotate("text",x=stat_OIB[4,2], y=-50, label = "tilde(x)", col="red", parse=T) + #median OIB
annotate("point", x=stat_IAB[1,2], y=0, shape=21, col="blue", fill="blue", size=3) + #mean IAB
annotate("text",x=stat_IAB[1,2], y=-50, label = "bar(x)", col="blue", parse=T) + #mean IAB
annotate("point", x=stat_IAB[4,2], y=0, shape=21, col="blue", fill="white", stroke=1, size=3) + #median IAB
annotate("text",x=stat_IAB[4,2], y=-50, label = "tilde(x)", col="blue", parse=T) + #median IAB
annotate("text", x=2.5, y = 2000, label = "IAB", hjust = 0, size = 4) +
annotate("text", x=2.5, y = 1800, label = "mean = 0.457", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 1600, label = "median = 0.364", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 1400, label = "SD = 0.133 - 0.781", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 1000, label = "OIB", hjust = 0, size = 4) +
annotate("text", x=2.5, y = 800, label = "mean = 1.338", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 600, label = "median = 1.266", hjust = 0, size = 3.5) +
annotate("text", x=2.5, y = 400, label = "SD = 0.933 - 1.744", hjust = 0, size = 3.5) +
scale_x_continuous(limits=c(0,3), breaks = c(0,.86,1,2,3)) +
labs(x='Nb / La', y='Count') + theme_bw(base_size=12) +
coord_cartesian(ylim = c(-20, 2400), clip = "off") +
annotate("text", -Inf, Inf, label = "B", size = 7, hjust = -1, vjust = 2) +
theme(line=element_blank(), axis.ticks=element_line(),
legend.title=element_blank())
B
# map Pacific
IAB <- IAB %>% filter(Nb_La < 2)
OIB <- OIB %>% filter(Nb_La < 2)
IAB$long <- ifelse(IAB$long < -25, IAB$long + 360, IAB$long)
OIB$long <- ifelse(OIB$long < -25, OIB$long + 360, OIB$long)
map <- ggplot() +
geom_polygon(data = fortify(maps::map("world2", plot=FALSE, fill=TRUE)),
aes(x=long, y=lat, group=group),
color="black", fill="gray90", size=.25) +
coord_equal(xlim = c(65,315), ylim = c(-55,60)) +
theme(panel.border=element_rect(colour="black", fill=NA, size=.75),
panel.background = element_rect(fill="white"),
panel.grid.major=element_blank(), panel.grid.minor=element_blank(),
axis.title = element_blank(), axis.text = element_blank(),
axis.ticks = element_blank(), legend.key.height = unit(.4, 'cm'),
legend.background = element_blank(), legend.title=element_text(size=8),
legend.text=element_text(size=8), legend.position=c(.08,.2))
C <- map + geom_point(data = IAB, aes(x=long, y=lat, fill=Nb_La),
shape=21, colour="black", size=3, stroke = .25) +
scale_fill_gradient2(low = "#3B4CC0", high = "#B40426", midpoint = 0.86) +
annotate("text", -Inf, Inf, label = "C", size = 7, hjust = -1, vjust = 2) +
labs(fill='Nb/La')
D <- map + geom_point(data = OIB, aes(x=long, y=lat, fill=Nb_La),
shape=21, colour="black", size=3, stroke = .25) +
scale_fill_gradient2(low = "#3B4CC0", high = "#B40426", midpoint = 0.86) +
annotate("text", -Inf, Inf, label = "D", size = 7, hjust = -1, vjust = 2) +
labs(fill='Nb/La')
C/D
#save
pdf(here("analysis","supplementary-materials","FigS7.pdf"), width=10, height=15)
(A/B/C/D) + plot_layout(heights = c(2, 2, 5, 5))
dev.off()
