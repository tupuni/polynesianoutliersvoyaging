max(CASE WHEN m.parameter='Tl [ppm]' then m.value END) AS 'Tl',
max(CASE WHEN m.parameter='Pb [ppm]' then m.value END) AS 'Pb',
max(CASE WHEN m.parameter='Th [ppm]' then m.value END) AS 'Th',
max(CASE WHEN m.parameter='U [ppm]' then m.value END) AS 'U',
max(CASE WHEN m.parameter='Nd143_Nd144' then m.value END) AS 'Nd143_Nd144',
max(CASE WHEN m.parameter='Sr87_Sr86' then m.value END) AS 'Sr87_Sr86',
max(CASE WHEN m.parameter='Pb206_Pb204' then m.value END) AS 'Pb206_Pb204',
max(CASE WHEN m.parameter='Pb207_Pb204' then m.value END) AS 'Pb207_Pb204',
max(CASE WHEN m.parameter='Pb208_Pb204' then m.value END) AS 'Pb208_Pb204'
FROM 'samples.csv' AS s JOIN 'measurements.csv' AS m ON s.id=m.sample_id
WHERE location_subregion = 'TUTUILA' AND
m.parameter IN ('SiO2 [%]', 'TiO2 [%]', 'Al2O3 [%]', 'Fe2O3 [%]', 'FeO [%]',
'MnO [%]', 'MgO [%]', 'CaO [%]', 'Na2O [%]', 'K2O [%]',
'Li [ppm]', 'Sc [ppm]', 'Ti [ppm]', 'V [ppm]',
'Cr [ppm]', 'Co [ppm]', 'Ni [ppm]', 'Cu [ppm]', 'Zn [ppm]', 'As [ppm]',
'Rb [ppm]', 'Sr [ppm]', 'Y [ppm]', 'Zr [ppm]', 'Nb [ppm]', 'Cd [ppm]',
'Cs [ppm]', 'Ba [ppm]', 'La [ppm]', 'Ce [ppm]', 'Pr [ppm]', 'Nd [ppm]',
'Sm [ppm]', 'Eu [ppm]', 'Gd [ppm]', 'Tb [ppm]', 'Dy [ppm]', 'Ho [ppm]',
'Er [ppm]', 'Tm [ppm]', 'Yb [ppm]', 'Lu [ppm]', 'Hf [ppm]', 'Ta [ppm]',
'Tl [ppm]', 'Pb [ppm]', 'Th [ppm]', 'U [ppm]', 'Nd143_Nd144', 'Sr87_Sr86',
'Pb206_Pb204', 'Pb207_Pb204', 'Pb208_Pb204') GROUP BY sample_id") %>%
Ti_from_TiO2() %>% K_from_K2O() %>% Fe2O3_from_FeO()
#### Fig S19 ####
q37 <- dbGetQuery(pofatu,
"SELECT * FROM (
SELECT
s.id AS Sample, s.sample_category,
s.location_subregion, s.site_name, s.sample_comment,
s.location_latitude AS lat, s.location_longitude AS long,
max(CASE WHEN m.parameter='SiO2 [%]' then m.value END) AS 'SiO2',
max(CASE WHEN m.parameter='TiO2 [%]' then m.value END) AS 'TiO2',
max(CASE WHEN m.parameter='Al2O3 [%]' then m.value END) AS 'Al2O3',
max(CASE WHEN m.parameter='Fe2O3 [%]' then m.value END) AS 'Fe2O3',
max(CASE WHEN m.parameter='FeO [%]' then m.value END) AS 'FeO',
max(CASE WHEN m.parameter='MnO [%]' then m.value END) AS 'MnO',
max(CASE WHEN m.parameter='MgO [%]' then m.value END) AS 'MgO',
max(CASE WHEN m.parameter='CaO [%]' then m.value END) AS 'CaO',
max(CASE WHEN m.parameter='Na2O [%]' then m.value END) AS 'Na2O',
max(CASE WHEN m.parameter='K2O [%]' then m.value END) AS 'K2O',
max(CASE WHEN m.parameter='Li [ppm]' then m.value END) AS 'Li',
max(CASE WHEN m.parameter='Sc [ppm]' then m.value END) AS 'Sc',
max(CASE WHEN m.parameter='Ti [ppm]' then m.value END) AS 'Ti',
max(CASE WHEN m.parameter='V [ppm]' then m.value END) AS 'V',
max(CASE WHEN m.parameter='Cr [ppm]' then m.value END) AS 'Cr',
max(CASE WHEN m.parameter='Co [ppm]' then m.value END) AS 'Co',
max(CASE WHEN m.parameter='Ni [ppm]' then m.value END) AS 'Ni',
max(CASE WHEN m.parameter='Cu [ppm]' then m.value END) AS 'Cu',
max(CASE WHEN m.parameter='Zn [ppm]' then m.value END) AS 'Zn',
max(CASE WHEN m.parameter='As [ppm]' then m.value END) AS 'As',
max(CASE WHEN m.parameter='Rb [ppm]' then m.value END) AS 'Rb',
max(CASE WHEN m.parameter='Sr [ppm]' then m.value END) AS 'Sr',
max(CASE WHEN m.parameter='Y [ppm]' then m.value END) AS 'Y',
max(CASE WHEN m.parameter='Zr [ppm]' then m.value END) AS 'Zr',
max(CASE WHEN m.parameter='Nb [ppm]' then m.value END) AS 'Nb',
max(CASE WHEN m.parameter='Cd [ppm]' then m.value END) AS 'Cd',
max(CASE WHEN m.parameter='Cs [ppm]' then m.value END) AS 'Cs',
max(CASE WHEN m.parameter='Ba [ppm]' then m.value END) AS 'Ba',
max(CASE WHEN m.parameter='La [ppm]' then m.value END) AS 'La',
max(CASE WHEN m.parameter='Ce [ppm]' then m.value END) AS 'Ce',
max(CASE WHEN m.parameter='Pr [ppm]' then m.value END) AS 'Pr',
max(CASE WHEN m.parameter='Nd [ppm]' then m.value END) AS 'Nd',
max(CASE WHEN m.parameter='Sm [ppm]' then m.value END) AS 'Sm',
max(CASE WHEN m.parameter='Eu [ppm]' then m.value END) AS 'Eu',
max(CASE WHEN m.parameter='Gd [ppm]' then m.value END) AS 'Gd',
max(CASE WHEN m.parameter='Tb [ppm]' then m.value END) AS 'Tb',
max(CASE WHEN m.parameter='Dy [ppm]' then m.value END) AS 'Dy',
max(CASE WHEN m.parameter='Ho [ppm]' then m.value END) AS 'Ho',
max(CASE WHEN m.parameter='Er [ppm]' then m.value END) AS 'Er',
max(CASE WHEN m.parameter='Tm [ppm]' then m.value END) AS 'Tm',
max(CASE WHEN m.parameter='Yb [ppm]' then m.value END) AS 'Yb',
max(CASE WHEN m.parameter='Lu [ppm]' then m.value END) AS 'Lu',
max(CASE WHEN m.parameter='Hf [ppm]' then m.value END) AS 'Hf',
max(CASE WHEN m.parameter='Ta [ppm]' then m.value END) AS 'Ta',
max(CASE WHEN m.parameter='Tl [ppm]' then m.value END) AS 'Tl',
max(CASE WHEN m.parameter='Pb [ppm]' then m.value END) AS 'Pb',
max(CASE WHEN m.parameter='Th [ppm]' then m.value END) AS 'Th',
max(CASE WHEN m.parameter='U [ppm]' then m.value END) AS 'U',
max(CASE WHEN m.parameter='Nd143_Nd144' then m.value END) AS 'Nd143_Nd144',
max(CASE WHEN m.parameter='Sr87_Sr86' then m.value END) AS 'Sr87_Sr86',
max(CASE WHEN m.parameter='Pb206_Pb204' then m.value END) AS 'Pb206_Pb204',
max(CASE WHEN m.parameter='Pb207_Pb204' then m.value END) AS 'Pb207_Pb204',
max(CASE WHEN m.parameter='Pb208_Pb204' then m.value END) AS 'Pb208_Pb204'
FROM 'samples.csv' AS s JOIN 'measurements.csv' AS m ON s.id=m.sample_id
WHERE m.parameter IN ('SiO2 [%]', 'TiO2 [%]', 'Al2O3 [%]', 'Fe2O3 [%]', 'FeO [%]',
'MnO [%]', 'MgO [%]', 'CaO [%]', 'Na2O [%]', 'K2O [%]',
'Li [ppm]', 'Sc [ppm]', 'Ti [ppm]', 'V [ppm]',
'Cr [ppm]', 'Co [ppm]', 'Ni [ppm]', 'Cu [ppm]', 'Zn [ppm]', 'As [ppm]',
'Rb [ppm]', 'Sr [ppm]', 'Y [ppm]', 'Zr [ppm]', 'Nb [ppm]', 'Cd [ppm]',
'Cs [ppm]', 'Ba [ppm]', 'La [ppm]', 'Ce [ppm]', 'Pr [ppm]', 'Nd [ppm]',
'Sm [ppm]', 'Eu [ppm]', 'Gd [ppm]', 'Tb [ppm]', 'Dy [ppm]', 'Ho [ppm]',
'Er [ppm]', 'Tm [ppm]', 'Yb [ppm]', 'Lu [ppm]', 'Hf [ppm]', 'Ta [ppm]',
'Tl [ppm]', 'Pb [ppm]', 'Th [ppm]', 'U [ppm]', 'Nd143_Nd144', 'Sr87_Sr86',
'Pb206_Pb204', 'Pb207_Pb204', 'Pb208_Pb204')
GROUP BY sample_id) WHERE
(Sample = 'best1992_TAU48' OR Sample = 'best1992_TAU49' OR
Sample = 'best1992_TAU52' OR Sample = 'best1992_TAU54' OR
Sample = 'best1992_TOK-A2' OR Sample = 'best1992_COOK-1' OR
Sample = 'best1992_BB-8-4-4(A)' OR Sample = 'best1992_TOK-A2' OR
Sample = 'allen1997_5' OR Sample = 'allen1997_6' OR
Sample = 'weisler2016a_2009-369' OR Sample = 'clark2014_36' OR
Sample = 'clark2014_51' OR Sample = 'clark2014_53' OR
Sample = 'clark2014_54' OR Sample = 'clark2014_241' OR
Sample = 'clark2014_678' OR Sample = 'clark2014_683' OR
Sample = 'clark2014_707')") %>%
Ti_from_TiO2() %>% K_from_K2O() %>% Fe2O3_from_FeO()
#### Fig S18 ####
OIB <- q36
OIB %>% group_by(site_name) %>% tally() %>% print(n=30)
OIB <- OIB %>%
dplyr::mutate(Category = case_when(
grepl("Artefact", sample_comment) ~ "artefact",
sample_category == "SOURCE" ~ "source",
sample_category == "ARTEFACT" ~ "artefact")) %>%
dplyr::mutate(Location = case_when(
site_name == "Tatagamatau" & Category == "source" ~ "Tatagamatau-source",
site_name == "Tatagamatau" & Category == "artefact" ~ "Tatagamatau-artefact",
grepl("MALAELOA", Sample) & Category == "source" ~ "Malaeloa-source",
grepl("MALAELOA", Sample) & Category == "artefact" ~ "Malaeloa-artefact",
grepl("MALOATA", Sample) & Category == "source" ~ "Maloata-source",
grepl("MALOATA", Sample) & Category == "artefact" ~ "Maloata-artefact",
TRUE ~ "Tutuila")) %>%
dplyr::select(
Sample,Location,Category,lat,long,SiO2,TiO2,Al2O3,Fe2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
OIB %>% dplyr::select(Sample, Location, Category)
OIB[OIB == 0] <- NA # Replace 0 with NA
s <- joined_data %>% dplyr::filter(Sample %in% c(
"E-11-08","T-12-06","T-12-07","T-12-08","T-12-09","T-12-10")) %>%
mutate(Location = case_when(
grepl("E-11-08", Sample) ~ "E-11-08",
grepl("T-12-06", Sample) ~ "T-12-06",
grepl("T-12-07", Sample) ~ "T-12-07",
grepl("T-12-08", Sample) ~ "T-12-08",
grepl("T-12-09", Sample) ~ "T-12-09",
grepl("T-12-10", Sample) ~ "T-12-10"))
View(s)
View(OIB)
OIB %>% select("Sample","Location","Nb")
OIB %>% select("Sample","Location","Nb") %>% order(OIB$Nb)
OIB %>% select("Sample","Location","Nb") %>% order(OIB$"Nb")
OIB %>% select("Sample","Location","Nb") %>% order("Nb")
OIB %>% select("Sample","Location","Nb") %>% order()
order(OIB$Nb)
OIB[order(OIB$Nb, decreasing = TRUE), ]
OIB[order(OIB$Nb, decreasing = TRUE), ]%>% select("Sample","Location","Nb")
q36
View(q36)
#### Fig S18 ####
q36 <- dbGetQuery(pofatu,
"SELECT s.id AS Sample, s.sample_category,
s.location_subregion, s.site_name, s.site_comment, s.sample_comment,
s.location_latitude AS lat, s.location_longitude AS long,
max(CASE WHEN m.parameter='SiO2 [%]' then m.value END) AS 'SiO2',
max(CASE WHEN m.parameter='TiO2 [%]' then m.value END) AS 'TiO2',
max(CASE WHEN m.parameter='Al2O3 [%]' then m.value END) AS 'Al2O3',
max(CASE WHEN m.parameter='Fe2O3 [%]' then m.value END) AS 'Fe2O3',
max(CASE WHEN m.parameter='FeO [%]' then m.value END) AS 'FeO',
max(CASE WHEN m.parameter='MnO [%]' then m.value END) AS 'MnO',
max(CASE WHEN m.parameter='MgO [%]' then m.value END) AS 'MgO',
max(CASE WHEN m.parameter='CaO [%]' then m.value END) AS 'CaO',
max(CASE WHEN m.parameter='Na2O [%]' then m.value END) AS 'Na2O',
max(CASE WHEN m.parameter='K2O [%]' then m.value END) AS 'K2O',
max(CASE WHEN m.parameter='Li [ppm]' then m.value END) AS 'Li',
max(CASE WHEN m.parameter='Sc [ppm]' then m.value END) AS 'Sc',
max(CASE WHEN m.parameter='Ti [ppm]' then m.value END) AS 'Ti',
max(CASE WHEN m.parameter='V [ppm]' then m.value END) AS 'V',
max(CASE WHEN m.parameter='Cr [ppm]' then m.value END) AS 'Cr',
max(CASE WHEN m.parameter='Co [ppm]' then m.value END) AS 'Co',
max(CASE WHEN m.parameter='Ni [ppm]' then m.value END) AS 'Ni',
max(CASE WHEN m.parameter='Cu [ppm]' then m.value END) AS 'Cu',
max(CASE WHEN m.parameter='Zn [ppm]' then m.value END) AS 'Zn',
max(CASE WHEN m.parameter='As [ppm]' then m.value END) AS 'As',
max(CASE WHEN m.parameter='Rb [ppm]' then m.value END) AS 'Rb',
max(CASE WHEN m.parameter='Sr [ppm]' then m.value END) AS 'Sr',
max(CASE WHEN m.parameter='Y [ppm]' then m.value END) AS 'Y',
max(CASE WHEN m.parameter='Zr [ppm]' then m.value END) AS 'Zr',
max(CASE WHEN m.parameter='Nb [ppm]' then m.value END) AS 'Nb',
max(CASE WHEN m.parameter='Cd [ppm]' then m.value END) AS 'Cd',
max(CASE WHEN m.parameter='Cs [ppm]' then m.value END) AS 'Cs',
max(CASE WHEN m.parameter='Ba [ppm]' then m.value END) AS 'Ba',
max(CASE WHEN m.parameter='La [ppm]' then m.value END) AS 'La',
max(CASE WHEN m.parameter='Ce [ppm]' then m.value END) AS 'Ce',
max(CASE WHEN m.parameter='Pr [ppm]' then m.value END) AS 'Pr',
max(CASE WHEN m.parameter='Nd [ppm]' then m.value END) AS 'Nd',
max(CASE WHEN m.parameter='Sm [ppm]' then m.value END) AS 'Sm',
max(CASE WHEN m.parameter='Eu [ppm]' then m.value END) AS 'Eu',
max(CASE WHEN m.parameter='Gd [ppm]' then m.value END) AS 'Gd',
max(CASE WHEN m.parameter='Tb [ppm]' then m.value END) AS 'Tb',
max(CASE WHEN m.parameter='Dy [ppm]' then m.value END) AS 'Dy',
max(CASE WHEN m.parameter='Ho [ppm]' then m.value END) AS 'Ho',
max(CASE WHEN m.parameter='Er [ppm]' then m.value END) AS 'Er',
max(CASE WHEN m.parameter='Tm [ppm]' then m.value END) AS 'Tm',
max(CASE WHEN m.parameter='Yb [ppm]' then m.value END) AS 'Yb',
max(CASE WHEN m.parameter='Lu [ppm]' then m.value END) AS 'Lu',
max(CASE WHEN m.parameter='Hf [ppm]' then m.value END) AS 'Hf',
max(CASE WHEN m.parameter='Ta [ppm]' then m.value END) AS 'Ta',
max(CASE WHEN m.parameter='Tl [ppm]' then m.value END) AS 'Tl',
max(CASE WHEN m.parameter='Pb [ppm]' then m.value END) AS 'Pb',
max(CASE WHEN m.parameter='Th [ppm]' then m.value END) AS 'Th',
max(CASE WHEN m.parameter='U [ppm]' then m.value END) AS 'U',
max(CASE WHEN m.parameter='Nd143_Nd144' then m.value END) AS 'Nd143_Nd144',
max(CASE WHEN m.parameter='Sr87_Sr86' then m.value END) AS 'Sr87_Sr86',
max(CASE WHEN m.parameter='Pb206_Pb204' then m.value END) AS 'Pb206_Pb204',
max(CASE WHEN m.parameter='Pb207_Pb204' then m.value END) AS 'Pb207_Pb204',
max(CASE WHEN m.parameter='Pb208_Pb204' then m.value END) AS 'Pb208_Pb204'
FROM 'samples.csv' AS s JOIN 'measurements.csv' AS m ON s.id=m.sample_id
WHERE location_subregion = 'TUTUILA' AND
m.parameter IN ('SiO2 [%]', 'TiO2 [%]', 'Al2O3 [%]', 'Fe2O3 [%]', 'FeO [%]',
'MnO [%]', 'MgO [%]', 'CaO [%]', 'Na2O [%]', 'K2O [%]',
'Li [ppm]', 'Sc [ppm]', 'Ti [ppm]', 'V [ppm]',
'Cr [ppm]', 'Co [ppm]', 'Ni [ppm]', 'Cu [ppm]', 'Zn [ppm]', 'As [ppm]',
'Rb [ppm]', 'Sr [ppm]', 'Y [ppm]', 'Zr [ppm]', 'Nb [ppm]', 'Cd [ppm]',
'Cs [ppm]', 'Ba [ppm]', 'La [ppm]', 'Ce [ppm]', 'Pr [ppm]', 'Nd [ppm]',
'Sm [ppm]', 'Eu [ppm]', 'Gd [ppm]', 'Tb [ppm]', 'Dy [ppm]', 'Ho [ppm]',
'Er [ppm]', 'Tm [ppm]', 'Yb [ppm]', 'Lu [ppm]', 'Hf [ppm]', 'Ta [ppm]',
'Tl [ppm]', 'Pb [ppm]', 'Th [ppm]', 'U [ppm]', 'Nd143_Nd144', 'Sr87_Sr86',
'Pb206_Pb204', 'Pb207_Pb204', 'Pb208_Pb204') GROUP BY sample_id") %>%
Ti_from_TiO2() %>% K_from_K2O() %>% Fe2O3_from_FeO()
#### Fig S18 ####
OIB <- q36
OIB %>% group_by(site_name) %>% tally() %>% print(n=30)
OIB <- OIB %>%
dplyr::mutate(Category = case_when(
grepl("Artefact", sample_comment) ~ "artefact",
sample_category == "SOURCE" ~ "source",
sample_category == "ARTEFACT" ~ "artefact")) %>%
dplyr::mutate(Location = case_when(
site_name == "Tatagamatau" & Category == "source" ~ "Tatagamatau-source",
site_name == "Tatagamatau" & Category == "artefact" ~ "Tatagamatau-artefact",
grepl("MALAELOA", Sample) & Category == "source" ~ "Malaeloa-source",
grepl("MALAELOA", Sample) & Category == "artefact" ~ "Malaeloa-artefact",
grepl("MALOATA", Sample) & Category == "source" ~ "Maloata-source",
grepl("MALOATA", Sample) & Category == "artefact" ~ "Maloata-artefact",
TRUE ~ "Tutuila")) %>%
dplyr::select(
Sample,Location,Category,lat,long,SiO2,TiO2,Al2O3,Fe2O3,MnO,MgO,CaO,Na2O,K2O,
Li,Sc,Ti,V,Cr,Co,Ni,Cu,Zn,As,Rb,Sr,Y,Zr,Nb,Cd,Cs,Ba,La,Ce,Pr,Nd,
Sm,Eu,Gd,Tb,Dy,Ho,Er,Tm,Yb,Lu,Hf,Ta,Pb,Th,U,K,
Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
OIB %>% dplyr::select(Sample, Location, Category)
OIB[OIB == 0] <- NA # Replace 0 with NA
#### Fig S18 ####
OIB <- q36
OIB %>% group_by(site_name) %>% tally() %>% print(n=30)
OIB <- OIB %>%
dplyr::mutate(Category = case_when(
grepl("Artefact", sample_comment) ~ "artefact",
sample_category == "SOURCE" ~ "source",
sample_category == "ARTEFACT" ~ "artefact")) %>%
dplyr::mutate(Location = case_when(
site_name == "Tatagamatau" & Category == "source" ~ "Tatagamatau-source",
site_name == "Tatagamatau" & Category == "artefact" ~ "Tatagamatau-artefact",
grepl("MALAELOA", Sample) & Category == "source" ~ "Malaeloa-source",
grepl("MALAELOA", Sample) & Category == "artefact" ~ "Malaeloa-artefact",
grepl("MALOATA", Sample) & Category == "source" ~ "Maloata-source",
grepl("MALOATA", Sample) & Category == "artefact" ~ "Maloata-artefact",
TRUE ~ "Tutuila"))
OIB %>% dplyr::select(Sample, Location, Category)
OIB[OIB == 0] <- NA # Replace 0 with NA
OIB[order(OIB$Nb, decreasing = TRUE), ] %>% select("Sample","Location","Nb")
16967-1645
6303-1895
9803-4380
1560+1625+1920
21683-5105
11633-910
library(tidyverse)
library(here)
## paths to db : insert path to the sqlite files
path_to_georoc <- "~/Documents/Github/georoc-data/georoc.sqlite"
path_to_pofatu <- "~/Documents/Github/pofatu-data/dist/pofatu.sqlite"
## load data
inventory <- read.csv(here("analysis", "data", "raw_data", "inventory.csv"),
header=TRUE, sep=",", stringsAsFactors=FALSE)
icpaes <- read.csv(here("analysis", "data", "raw_data", "icpaes.csv"),
header=TRUE, sep=",", stringsAsFactors=FALSE)
icpms <- read.csv(here("analysis", "data", "raw_data", "icpms.csv"),
header=TRUE, sep=",", stringsAsFactors=FALSE)
mcicpms <- read.csv(here("analysis", "data", "raw_data", "mcicpms.csv"),
header=TRUE, sep=",", stringsAsFactors=FALSE)
## assemble and join data
samples <- inventory %>% dplyr::select(`Sample`,`Latitude`,`Longitude`) %>%
rename("lat" = Latitude, "long" = Longitude)
oxides <- icpaes %>% slice(1:23) %>% dplyr::select(c(1:13))
traces <- icpms %>% slice(1:23)
isotopes <- mcicpms %>% slice(1:23)
joined_data <- right_join(samples, oxides, by = c("Sample")) %>%
right_join(., traces, by = c("Sample", "Type", "Location")) %>%
right_join(., isotopes, by = c("Sample", "Type", "Location"))
write.csv(joined_data,"analysis/data/derived_data/joined_data.csv")
## makes Ti(ppm) from TiO2(%)
Ti_from_TiO2 <- function(input) {
output <- input %>%
mutate(Ti=(((TiO2*10000)/79.8650)*47.867))
return(output)
}
joined_data <- Ti_from_TiO2(joined_data)
## makes K(ppm) from K2O(%)
K_from_K2O <- function(input) {
output <- input %>%
mutate(K=((K2O*10000)/94)*78)
return(output)
}
joined_data <- K_from_K2O(joined_data)
## converts FeO% to Fe2O3%
Fe2O3_from_FeO <- function(input) {
output <- input %>%
mutate(Fe2O3 = ifelse(Fe2O3 %in% NA, FeO*1.1113, Fe2O3))
return(output)
}
## ranges()
summary(joined_data[,c(
"Sample","SiO2","K2O","Na2O","MgO","Nb","La","Ba","Ta","Sr","Nd","Pb",
"Sm","Zr","Yb","Ti")])
ranges_IAB <- function(df) {
df_ranges <- df %>%
dplyr::transmute(Sample = Sample,
`SiO2 min` = SiO2 - 1.5, `SiO2 max` = SiO2 + 1.5,
`MgO min` = MgO - 1.5, `MgO max` = MgO + 1.5,
`Na2O min` = Na2O - 1.5, `Na2O max` = Na2O + 1.5,
`K2O min` = K2O - 1.5, `K2O max` = K2O + 1.5,
`Cs min` = (Cs-((Cs*50)/100)), `Cs max` = (Cs+((Cs*50)/100)), # +/- 50%
`Rb min` = (Rb-((Rb*50)/100)), `Rb max` = (Rb+((Rb*50)/100)), # +/- 50%
`Ba min` = (Ba-((Ba*50)/100)), `Ba max` = (Ba+((Ba*50)/100)), # +/- 50%
`Th min` = (Th-((Th*50)/100)), `Th max` = (Th+((Th*50)/100)), # +/- 50%
`Ce min` = (Ce-((Ce*50)/100)), `Ce max` = (Ce+((Ce*50)/100)), # +/- 50%
`Pb min` = (Pb-((Pb*50)/100)), `Pb max` = (Pb+((Pb*50)/100)), # +/- 50%
`Nd min` = (Nd-((Nd*50)/100)), `Nd max` = (Nd+((Nd*50)/100)), # +/- 50%
`Sr min` = (Sr-((Sr*50)/100)), `Sr max` = (Sr+((Sr*50)/100)), # +/- 50%
`Nb min` = (Nb-((Nb*50)/100)), `Nb max` = (Nb+((Nb*50)/100)), # +/- 50%
`Sm min` = (Sm-((Sm*50)/100)), `Sm max` = (Sm+((Sm*50)/100)), # +/- 50%
`Zr min` = (Zr-((Zr*50)/100)), `Zr max` = (Zr+((Zr*50)/100)), # +/- 50%
`Yb min` = (Yb-((Yb*50)/100)), `Yb max` = (Yb+((Yb*50)/100)), # +/- 50%
`Ti min` = (Ti-((Ti*50)/100)), `Ti max` = (Ti+((Ti*50)/100)), # +/- 50%
`Nd143_Nd144 min` = (Nd143_Nd144-((Nd143_Nd144*1)/1000)), # 1‰
`Nd143_Nd144 max` = (Nd143_Nd144+((Nd143_Nd144*1)/1000)), # 1‰
`Sr87_Sr86 min` = (Sr87_Sr86-((Sr87_Sr86*1)/1000)), # 1‰
`Sr87_Sr86 max` = (Sr87_Sr86+((Sr87_Sr86*1)/1000)), # 1‰
`Pb206_Pb204 min` = (Pb206_Pb204-((Pb206_Pb204*.5)/100)), # .5%
`Pb206_Pb204 max` = (Pb206_Pb204+((Pb206_Pb204*.5)/100)), # .5%
`Pb207_Pb204 min` = (Pb207_Pb204-((Pb207_Pb204*.5)/100)), # .5%
`Pb207_Pb204 max` = (Pb207_Pb204+((Pb207_Pb204*.5)/100)), # .5%
`Pb208_Pb204 min` = (Pb208_Pb204-((Pb208_Pb204*.5)/100)), # .5%
`Pb208_Pb204 max` = (Pb208_Pb204+((Pb208_Pb204*.5)/100))  # .5%
)
return(df_ranges)
}
ranges_OIB <- function(df) {
df_ranges <- df %>%
dplyr::transmute(
Sample = Sample,
`SiO2 min` = SiO2 - 1.5, `SiO2 max` = SiO2 + 1.5,
`MgO min` = MgO - 1.5, `MgO max` = MgO + 1.5,
`Na2O min` = Na2O - 1.5, `Na2O max` = Na2O + 1.5,
`K2O min` = K2O - 1.5, `K2O max` = K2O + 1.5,
`Cs min` = (Cs-((Cs*50)/100)), `Cs max` = (Cs+((Cs*50)/100)), # +/- 50%
`Rb min` = (Rb-((Rb*50)/100)), `Rb max` = (Rb+((Rb*50)/100)), # +/- 50%
`Ba min` = (Ba-((Ba*50)/100)), `Ba max` = (Ba+((Ba*50)/100)), # +/- 50%
`Th min` = (Th-((Th*50)/100)), `Th max` = (Th+((Th*50)/100)), # +/- 50%
`Ce min` = (Ce-((Ce*50)/100)), `Ce max` = (Ce+((Ce*50)/100)), # +/- 50%
`Pb min` = (Pb-((Pb*50)/100)), `Pb max` = (Pb+((Pb*50)/100)), # +/- 50%
`Nd min` = (Nd-((Nd*50)/100)), `Nd max` = (Nd+((Nd*50)/100)), # +/- 50%
`Sr min` = (Sr-((Sr*50)/100)), `Sr max` = (Sr+((Sr*50)/100)), # +/- 50%
`Nb min` = (Nb-((Nb*50)/100)), `Nb max` = (Nb+((Nb*50)/100)), # +/- 50%
`Sm min` = (Sm-((Sm*50)/100)), `Sm max` = (Sm+((Sm*50)/100)), # +/- 50%
`Zr min` = (Zr-((Zr*50)/100)), `Zr max` = (Zr+((Zr*50)/100)), # +/- 50%
`Yb min` = (Yb-((Yb*50)/100)), `Yb max` = (Yb+((Yb*50)/100)), # +/- 50%
`Ti min` = (Ti-((Ti*50)/100)), `Ti max` = (Ti+((Ti*50)/100)), # +/- 50%
`Nd143_Nd144 min` = (Nd143_Nd144-((Nd143_Nd144*1)/1000)), # 1‰
`Nd143_Nd144 max` = (Nd143_Nd144+((Nd143_Nd144*1)/1000)), # 1‰
`Sr87_Sr86 min` = (Sr87_Sr86-((Sr87_Sr86*1)/1000)), # 1‰
`Sr87_Sr86 max` = (Sr87_Sr86+((Sr87_Sr86*1)/1000)), # 1‰
`Pb206_Pb204 min` = (Pb206_Pb204-((Pb206_Pb204*1)/100)), # 1%
`Pb206_Pb204 max` = (Pb206_Pb204+((Pb206_Pb204*1)/100)), # 1%
`Pb207_Pb204 min` = (Pb207_Pb204-((Pb207_Pb204*1)/100)), # 1%
`Pb207_Pb204 max` = (Pb207_Pb204+((Pb207_Pb204*1)/100)), # 1%
`Pb208_Pb204 min` = (Pb208_Pb204-((Pb208_Pb204*1)/100)), # 1%
`Pb208_Pb204 max` = (Pb208_Pb204+((Pb208_Pb204*1)/100))  # 1%
)
return(df_ranges)
}
ranges_s_IAB <- joined_data %>% dplyr::filter(Sample %in% c(
"E-11-03","E-11-06","E-11-07","K-12-28","K-12-29")) %>% ranges_IAB()
write_csv(ranges_s_IAB, (here(
"analysis", "data", "derived_data","IAB_ranges.csv")))
ranges_s_OIB <- joined_data %>% dplyr::filter(Sample %in% c(
"E-11-08","T-12-06","T-12-07","T-12-08","T-12-09","T-12-10",
"K-12-24","K-12-25","K-12-26")) %>% ranges_OIB()
write_csv(ranges_s_OIB, (here(
"analysis", "data", "derived_data","OIB_ranges.csv")))
## normalizes trace element values to primitive mantle,
## based on PM values from McDonough & Sun (1989,1995)
sun <- read.csv(here(
"analysis", "data", "raw_data", "sun_mcdonough.csv"),
header=TRUE, sep=",", stringsAsFactors=FALSE)
normalize_to_pm <- function(df) {
df_normalized <- df %>%
dplyr::mutate(
Cs=Cs/sun[2,"Cs"],Rb=Rb/sun[2,"Rb"],Ba=Ba/sun[2,"Ba"],Th=Th/sun[2,"Th"],
U=U/sun[2,"U"],Nb=Nb/sun[2,"Nb"],Ta=Ta/sun[2,"Ta"],La=La/sun[2,"La"],
Ce=Ce/sun[2,"Ce"],Pr=Pr/sun[2,"Pr"],Nd=Nd/sun[2,"Nd"],Sr=Sr/sun[2,"Sr"],
Sm=Sm/sun[2,"Sm"],Zr=Zr/sun[2,"Zr"],Ti=Ti/sun[2,"Ti"],Eu=Eu/sun[2,"Eu"],
Gd=Gd/sun[2,"Gd"],Tb=Tb/sun[2,"Tb"],Dy=Dy/sun[2,"Dy"],Y=Y/sun[2,"Y"],
Er=Er/sun[2,"Er"],Yb=Yb/sun[2,"Yb"],Lu=Lu/sun[2,"Lu"]) %>%
gather("var","conc",Cs:Lu)
return(df_normalized)
}
## georoc_location_from_file_id()
get_georoc_location <- function(georoc_output) {
georoc_output_with_location <- georoc_output %>%
mutate(
Location = case_when(
grepl("BANDA_ARC", file_id) ~ "Banda Arc",
grepl("BISMARCK_ARC", file_id) ~ "Bismarck Arc",
grepl("LUZON_ARC", file_id) ~ "Luzon Arc",
grepl("MARIANA_ARC", file_id) ~ "Mariana Arc",
grepl("NEW_CALEDONIA", file_id) ~ "New Caledonia",
grepl("NEW_HEBRIDES_ARC", file_id) ~ "Vanuatu Arc",
grepl("NEW_ZEALAND", file_id) ~ "New Zealand",
grepl("SOLOMON_ISLAND_ARC", file_id) ~ "Solomon Arc",
grepl("SULAWESI_ARC", file_id) ~ "Sulawesi Arc",
grepl("SUNDA_ARC", file_id) ~ "Sunda Arc",
grepl("TONGA_ARC", file_id) ~ "Tonga-Fiji",
LOCATION == "TONGA ARC / WALLIS-FUTUNA ISLANDS / WALLIS (UVEA) ISLANDS" ~ "Uvea (Wallis)",
grepl("YAP_ARC", file_id) ~ "Yap Arc",
grepl("AUSTRAL-COOK_ISLANDS", file_id) & long > -155 ~ "Austral-Cook chain",
grepl("AUSTRAL-COOK_ISLANDS", file_id) & long < -155 ~ "Austral-Cook chain",
grepl("CAROLINE_ISLANDS", file_id) ~ "Caroline islands",
grepl("EASTER_SEAMOUNT_CHAIN", file_id) ~ "Rapa Nui",
grepl("HAWAIIAN_ISLANDS", file_id) ~ "Hawai'i islands",
grepl("MARQUESAS", file_id) ~ "Marquesas islands",
grepl("PITCAIRN-GAMBIER", file_id) & long > -132 ~ "Pitcairn-Gambier chain",
grepl("PITCAIRN-GAMBIER", file_id) & long < -132 ~ "Pitcairn-Gambier chain",
grepl("SAMOAN_ISLANDS", file_id) ~ "Samoan islands",
grepl("SOCIETY_ISLANDS", file_id) ~ "Society islands",
grepl("TUAMOTU_ISLANDS", file_id) ~ "Tuamotu islands",
TRUE ~ "na"))
return(georoc_output_with_location)
}
## pofatu_location()
pofatu_location <- function(pofatu_output) {
pofatu_output_with_location <- pofatu_output %>%
mutate(
Location = case_when(
location_region == "AUSTRAL" ~ "Austral-Cook chain",
location_region == "CAROLINE" ~ "Caroline islands",
location_region == "COOK ISLANDS" ~ "Austral-Cook chain",
location_region == "FIJI" ~ "Tonga Arc",
location_region == "FIJI/LAU_GROUP" ~ "Tonga Arc",
location_region == "GAMBIER" ~ "Pitcairn-Gambier chain",
location_region == "HAWAI'I" ~ "Hawai'i islands",
location_region == "HENDERSON" ~ "Pitcairn-Gambier chain",
location_region == "MARQUESAS" ~ "Marquesas islands",
location_region == "NEW GUINEA" ~ "New Guinea",
location_region == "NEW ZEALAND" ~ "New Zealand",
location_region == "PITCAIRN" ~ "Pitcairn-Gambier chain",
location_region == "RAPA NUI" ~ "Rapa Nui",
location_region == "ROTUMA" ~ "Tonga Arc",
location_region == "SAMOA" ~ "Samoan islands",
location_region == "SOCIETY" ~ "Society islands",
location_region == "SOLOMON" ~ "Solomon Arc",
location_region == "SOLOMON/STA_CRUZ_GROUP" ~ "Solomon Arc",
location_region == "TIMOR" ~ "Timor",
location_region == "TOKELAU" ~ "Tokelau islands",
location_region == "TONGA" ~ "Tonga Arc",
location_region == "TUAMOTU" ~ "Tuamotu islands",
location_region == "TUVALU" ~ "Tuvalu islands",
location_region == "UVEA" ~ "Uvea island",
location_region == "VANUATU" ~ "Vanuatu Arc",
TRUE ~ "na"))
return(pofatu_output_with_location)
}
#### Fig S11 ####
q20 <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
(LONGITUDE_MAX > 90 OR LONGITUDE_MAX < 0) AND
LATITUDE_MAX < 20 AND TECTONIC_SETTING='CONVERGENT MARGIN'") %>%
get_georoc_location() %>% dplyr::filter(Location != "na") %>%
dplyr::select(
Sample,Location,lat,long,Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
require(tidyverse)
require(RSQLite)
require(DBI)
georoc <- dbConnect(RSQLite::SQLite(), path_to_georoc)
pofatu <- dbConnect(RSQLite::SQLite(), path_to_pofatu)
#### Fig S11 ####
q20 <- dbGetQuery(georoc,
"SELECT * FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
(LONGITUDE_MAX > 90 OR LONGITUDE_MAX < 0) AND
LATITUDE_MAX < 20 AND TECTONIC_SETTING='CONVERGENT MARGIN'") %>%
get_georoc_location() %>% dplyr::filter(Location != "na") %>%
dplyr::select(
Sample,Location,lat,long,Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
#### Fig S11 ####
q20 <- dbGetQuery(georoc,
"SELECT id AS Sample, file_id, LOCATION,
LATITUDE_MAX AS lat, LONGITUDE_MAX AS long,
ND143_ND144 AS Nd143_Nd144, SR87_SR86 AS Sr87_Sr86,
PB206_PB204 AS Pb206_Pb204, PB207_PB204 AS Pb207_Pb204,
PB208_PB204 AS Pb208_Pb204
FROM 'sample'
WHERE LAND_OR_SEA = 'SAE' AND ROCK_TYPE='VOL' AND
(LONGITUDE_MAX > 90 OR LONGITUDE_MAX < 0) AND
LATITUDE_MAX < 20 AND TECTONIC_SETTING='CONVERGENT MARGIN'") %>%
get_georoc_location() %>% dplyr::filter(Location != "na") %>%
dplyr::select(
Sample,Location,lat,long,Sr87_Sr86,Nd143_Nd144,Pb206_Pb204,Pb207_Pb204,Pb208_Pb204)
View(q20)
